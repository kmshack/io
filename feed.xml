<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android UI OpenSource</title>
    <description>Collection of OpenSource for Android UI.</description>
    <link>http://android.kmshack.kr/</link>
    <atom:link href="http://android.kmshack.kr/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 14 Nov 2016 10:43:39 +0900</pubDate>
    <lastBuildDate>Mon, 14 Nov 2016 10:43:39 +0900</lastBuildDate>
    <generator>Jekyll v3.0.1</generator>
    
      <item>
        <title>CircularBarPager</title>
        <description>&lt;h1 id=&quot;circularbarpager-android-arsenalhttpsimgshieldsiobadgeandroid20arsenal-circularbarpager-brightgreensvgstyleflathttpsandroid-arsenalcomdetails11426&quot;&gt;CircularBarPager &lt;a href=&quot;https://android-arsenal.com/details/1/1426&quot;&gt;[Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-CircularBarPager-brightgreen.svg?style=flat)&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;A Lollipop material design styled CircularBarPager library (API 10+).&lt;/p&gt;

&lt;p&gt;To include in your project, add this to your build.gradle file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   //CircularBarPager
   compile &#39;com.github.orangegangsters:library:1.3.4@aar&#39;
   //CirclePageIndicator
   compile &#39;com.viewpagerindicator:library:2.4.1@aar&#39;
   //Animations and progress value easing
   compile &#39;com.nineoldandroids:library:2.4.0&#39;
   compile &#39;com.daimajia.easing:library:1.0.1@aar&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;app/src/main/res/raw/github_gif.gif&quot;&gt;Demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;========
### By
Developers:
        &lt;a href=&quot;https://github.com/olivierg13&quot;&gt;Olivier Goutay&lt;/a&gt; and &lt;a href=&quot;https://github.com/StoyanD&quot;&gt;Stoyan Dimitrov&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Designers:
        &lt;a href=&quot;http://danielwaldron.com/&quot;&gt;Daniel Waldron&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;usage&quot;&gt;Usage&lt;/h3&gt;

&lt;p&gt;Look at the example app for a live example on how to use the library.&lt;/p&gt;

&lt;h4 id=&quot;preparing-dependencies&quot;&gt;Preparing dependencies&lt;/h4&gt;

&lt;p&gt;In order to use the CirclePageIndicator by Square, you need to add a repo to your main build.gradle file:
&lt;code class=&quot;highlighter-rouge&quot;&gt;
allprojects {
    repositories {
        maven { url &#39;http://dl.bintray.com/populov/maven/&#39; }
        jcenter()
    }
}
&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;in-xml&quot;&gt;In XML:&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;com.github.OrangeGangsters.circularbarpager.library.CircularBarPager
        android:id=&quot;@+id/circularBarPager&quot;
        android:layout_height=&quot;match_parent&quot;
        android:layout_width=&quot;match_parent&quot;
        android:paddingLeft=&quot;30dp&quot;
        android:paddingRight=&quot;30dp&quot;
        android:layout_centerInParent=&quot;true&quot;
        style=&quot;@style/CircularBarPagerStyle&quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;in-stylesxml&quot;&gt;In styles.xml&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &amp;lt;style name=&quot;CircularBarPagerStyle&quot;&amp;gt;
        &amp;lt;item name=&quot;android:layout_height&quot;&amp;gt;match_parent&amp;lt;/item&amp;gt;
        &amp;lt;item name=&quot;android:layout_width&quot;&amp;gt;match_parent&amp;lt;/item&amp;gt;

        &amp;lt;item name=&quot;progress_arc_max&quot;&amp;gt;100&amp;lt;/item&amp;gt;
        &amp;lt;item name=&quot;arc_progress&quot;&amp;gt;0&amp;lt;/item&amp;gt;



        &amp;lt;item name=&quot;progress_arc_clockwise_outline_width&quot;&amp;gt;0.75dp&amp;lt;/item&amp;gt;
        &amp;lt;item name=&quot;progress_arc_counter_clockwise_outline_width&quot;&amp;gt;0.75dp&amp;lt;/item&amp;gt;
        &amp;lt;item name=&quot;progress_arc_clockwise_width&quot;&amp;gt;8dp&amp;lt;/item&amp;gt;
        &amp;lt;item name=&quot;progress_arc_counter_clockwise_width&quot;&amp;gt;8dp&amp;lt;/item&amp;gt;
        
        &amp;lt;item name=&quot;progress_start_line_enabled&quot;&amp;gt;true&amp;lt;/item&amp;gt;
        &amp;lt;item name=&quot;progress_pager_on_click_enabled&quot;&amp;gt;true&amp;lt;/item&amp;gt;
        &amp;lt;item name=&quot;progress_pager_fill_circle_color&quot;&amp;gt;#00000000&amp;lt;/item&amp;gt;
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;========&lt;/p&gt;

&lt;h3 id=&quot;customization&quot;&gt;Customization&lt;/h3&gt;

&lt;p&gt;You can change several attributes in the XML file:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;app:arc_progress [integer def:0 0-100] –&amp;gt; The default arc progress when start up&lt;/li&gt;
  &lt;li&gt;app:progress_arc_max [integer def:100 0-100] –&amp;gt; The maximum arc progress&lt;/li&gt;
  &lt;li&gt;app:progress_arc_clockwise_color [color hex] –&amp;gt; The main color in clockwise mode&lt;/li&gt;
  &lt;li&gt;app:progress_arc_clockwise_outline_color [color hex] –&amp;gt; The outline color in clockwise mode&lt;/li&gt;
  &lt;li&gt;app:progress_arc_counter_clockwise_color [color hex] –&amp;gt; The outline color in counter-clockwise mode&lt;/li&gt;
  &lt;li&gt;app:progress_arc_counter_clockwise_outline_color [color hex] –&amp;gt; The outline color in counter-clockwise mode&lt;/li&gt;
  &lt;li&gt;app:progress_arc_clockwise_width [integer dp] –&amp;gt; The width size of the main color in clockwise mode&lt;/li&gt;
  &lt;li&gt;app:progress_arc_clockwise_outline_width [integer dp] –&amp;gt; The width size of the outline color in clockwise mode&lt;/li&gt;
  &lt;li&gt;app:progress_arc_counter_clockwise_width [integer dp] –&amp;gt; The width size of the color in counter-clockwise mode&lt;/li&gt;
  &lt;li&gt;app:progress_arc_counter_clockwise_outline_width [integer dp] –&amp;gt; The width size of the outline color in counter-clockwise mode&lt;/li&gt;
  &lt;li&gt;app:progress_pager_on_click_enabled [boolean] –&amp;gt; The boolean that enables or disables the click enabled (on click, changes page)&lt;/li&gt;
  &lt;li&gt;app:progress_start_line_enabled [boolean] –&amp;gt; The boolean that enables the line that displays the starting position of the pager&lt;/li&gt;
  &lt;li&gt;app:progress_pager_on_click_enabled [boolean] –&amp;gt; The boolean that enables the user to change pages with a click as well as a slide&lt;/li&gt;
  &lt;li&gt;app:progress_pager_fill_circle_color [color hex] –&amp;gt; The color to fill the circle, transparent as default&lt;/li&gt;
  &lt;li&gt;app:progress_pager_fill_mode [enum int] –&amp;gt; The mode to fill the circle, “default_mode” or “pie_mode”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can access every components programmatically by getting the CircularBarPager object:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;CircularBarPager mCircularBarPager = (CircularBarPager) findViewById(R.id.circularBarPager);
CircularBar circularBar = mCircularBarPager.getCircularBar();
ViewPager viewPager = mCircularBarPager.getViewPager();
CirclePageIndicator circlePageIndicator = mCircularBarPager.getCirclePageIndicator();
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;========&lt;/p&gt;

&lt;h3 id=&quot;credits&quot;&gt;Credits&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;We used ViewPagerIndicator from JakeWharton (https://github.com/JakeWharton/ViewPagerIndicator) for the page indicator at the bottom of the CircularBarPager&lt;/li&gt;
  &lt;li&gt;We used NineOldAndroids from JakeWharton (https://github.com/JakeWharton/NineOldAndroids/) to use beautiful animations on API 10+&lt;/li&gt;
  &lt;li&gt;We used AnimationEasingFunctions from daimajia (https://github.com/daimajia/AnimationEasingFunctions) to also use beautiful animations on API 10+&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;========&lt;/p&gt;

&lt;h3 id=&quot;license&quot;&gt;License&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;The MIT License (MIT)

Copyright (c) 2015 OrangeGangsters

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the &quot;Software&quot;), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Mon, 14 Nov 2016 00:00:00 +0900</pubDate>
        <link>http://android.kmshack.kr/2016/11/14/CircularBarPager/</link>
        <guid isPermaLink="true">http://android.kmshack.kr/2016/11/14/CircularBarPager/</guid>
        
        <category>circular</category>
        
        <category>progress</category>
        
        
      </item>
    
      <item>
        <title>PageIndicatorView</title>
        <description>&lt;h1 id=&quot;chipslayoutmanager-img-altchipslayoutmanager-is-an-android-library-srchttpswwwcleveroadcompubliccomerciallabel-androidsvg-height19-minsdk-for-chipslayoutmanagerhttpsimgshieldsiobadgeminsdk-15-greensvg-android-arsenalhttpsimgshieldsiobadgeandroid20arsenal-chipslayoutmanager-brightgreensvgstyleflathttpsandroid-arsenalcomdetails14568&quot;&gt;ChipsLayoutManager &lt;img alt=&quot;ChipsLayoutManager is an android library&quot; src=&quot;https://www.cleveroad.com/public/comercial/label-android.svg&quot; height=&quot;19&quot; /&gt; &lt;a href=&quot;#&quot;&gt;[minSdk for ChipsLayoutManager](https://img.shields.io/badge/minSdk-15-green.svg)&lt;/a&gt; &lt;a href=&quot;https://android-arsenal.com/details/1/4568#&quot;&gt;[Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-ChipsLayoutManager-brightgreen.svg?style=flat)&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;/images/header.png&quot;&gt;ChipsLayoutManager for RecyclerView. Custom layout manager for RecyclerView&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;this-is-chipslayoutmanager---custom-recycler-views-layoutmanager-which-moves-item-to-the-next-line-when-no-space-left-on-the-current&quot;&gt;This is ChipsLayoutManager - custom Recycler View’s LayoutManager which moves item to the next line when no space left on the current&lt;/h2&gt;
&lt;p&gt;This layout manager could represent &lt;a href=&quot;https://material.google.com/components/chips.html#&quot;&gt;Google Chips material design pattern&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As an android developer i see that google isn’t so polite to support all our wishes, and when i faced with such common task like create spannable list
but with support of CRUD animations i decided to make such stuff and share it.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;/images/demo.gif&quot; alt=&quot;Chips layout manager gif with scrolling&quot; /&gt;
&lt;/p&gt;

&lt;h2 id=&quot;setup-and-usage&quot;&gt;Setup and usage&lt;/h2&gt;
&lt;p&gt;### Installation &lt;a href=&quot;https://bintray.com/beloo/widget/ChipsLayoutManager/_latestVersion&quot;&gt; [Download](https://api.bintray.com/packages/beloo/widget/ChipsLayoutManager/images/download.svg) &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;with gradle
&lt;code class=&quot;highlighter-rouge&quot;&gt;GRADLE 
compile &#39;com.beloo.widget:ChipsLayoutManager:0.2.2&#39;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Assuming you have installed jCenter provider:
&lt;code class=&quot;highlighter-rouge&quot;&gt;GRADLE
allprojects {
    repositories {
        jcenter()
    }
}
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;or just import &lt;code class=&quot;highlighter-rouge&quot;&gt;ChipsLayoutManager&lt;/code&gt; module to your project.&lt;/p&gt;

&lt;h3 id=&quot;features&quot;&gt;Features&lt;/h3&gt;
&lt;p&gt;Layout manager represents chips or spanned or “bubble” structure of list items and is a good replace for typical implementations of such issue based on spans in &lt;code class=&quot;highlighter-rouge&quot;&gt;TextView&lt;/code&gt; 
or custom &lt;code class=&quot;highlighter-rouge&quot;&gt;FlowLayout&lt;/code&gt;s.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;supports &lt;code class=&quot;highlighter-rouge&quot;&gt;RecyclerView&lt;/code&gt;’s features, such as default animations while CRUD items &amp;amp; custom &lt;code class=&quot;highlighter-rouge&quot;&gt;ItemAnimator&lt;/code&gt;s, &lt;code class=&quot;highlighter-rouge&quot;&gt;ItemDecorator&lt;/code&gt;s, scrolling etc. &lt;code class=&quot;highlighter-rouge&quot;&gt;wrap_content&lt;/code&gt; of height is supported&lt;/li&gt;
  &lt;li&gt;vertical scrolling is supported. Horizontal scrolling isn’t supported. It is possible to disable vertical scrolling as well. Supported padding/margin, clipToPadding parameter of &lt;code class=&quot;highlighter-rouge&quot;&gt;RecyclerView&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;supports different height and width of items&lt;/li&gt;
  &lt;li&gt;recycling items support (another advantage over &lt;code class=&quot;highlighter-rouge&quot;&gt;TextView&lt;/code&gt; approach)&lt;/li&gt;
  &lt;li&gt;items gravity inside row support. For all items or only for required ones&lt;/li&gt;
  &lt;li&gt;LTR and RTL support&lt;/li&gt;
  &lt;li&gt;activity orientation change support&lt;/li&gt;
  &lt;li&gt;predictive animations supported (animate view movement outside of visible bounds)&lt;/li&gt;
  &lt;li&gt;setting max count of view in row&lt;/li&gt;
  &lt;li&gt;you are able to break row due to your conditions&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Insert/delete&lt;/th&gt;
      &lt;th&gt;Move&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;/images/insert_delete_animations.gif&quot;&gt;Insert/delete animations with ChipsLayoutManager&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;/images/move_animations.gif&quot;&gt;Move animations with ChipsLayoutManager&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;###Layout Directions&lt;/p&gt;
&lt;center&gt;

| Left to Right  | Right to Left  |
|---|---|
|[Left to Right implementation of ChipsLayoutManager](/images/ltr.png) |[Right to Left implementation of ChipsLayoutManager](/images/rtl.png)|

&lt;/center&gt;

&lt;h3 id=&quot;usage&quot;&gt;Usage&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-JAVA&quot;&gt;ChipsLayoutManager chipsLayoutManager = ChipsLayoutManager.newBuilder()
        //set vertical gravity for all items in a row. Default = Gravity.CENTER_VERTICAL
        .setChildGravity(Gravity.TOP)
        //whether RecyclerView can scroll
        .setScrollingEnabled(true)
        //set maximum views count in a particular row
        .setMaxViewsInRow(2)
        //set gravity resolver where you can determine gravity for item in position. This method have priority over previous one
        .setGravityResolver(new IChildGravityResolver() {
            @Override
            public int getItemGravity(int position) {
                return Gravity.CENTER;
            }
        })
        //you are able to break row due to your conditions. Row breaker should return true for that views
        .setRowBreaker(new IRowBreaker() {
            @Override
            public boolean isItemBreakRow(@IntRange(from = 0) int position) {
                return position == 6 || position == 11 || position == 2;
            }
        })
        .build();
rv.setLayoutManager(chipsLayoutManager);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notice that if you changed gravity resolver or row breaker conditions in runtime - it won’t affect already drew items and cached item positions. 
You have to call &lt;code class=&quot;highlighter-rouge&quot;&gt;notifyItemChanged&lt;/code&gt; on &lt;code class=&quot;highlighter-rouge&quot;&gt;ChipsLayoutManager&lt;/code&gt; otherwise layout won’t be predictable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Device current direction&lt;/strong&gt; have been chosen by default.
You can manipulate with layout direction (&lt;strong&gt;LTR&lt;/strong&gt; or &lt;strong&gt;RTL&lt;/strong&gt;)&lt;br /&gt;
&lt;em&gt;On Api &amp;gt;= 17:&lt;/em&gt;
```XML&lt;/p&gt;
&lt;android.support.v7.widget.recyclerview android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot; android:layoutdirection=&quot;rtl&quot; /&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;or programmatically (_on all supported Api:_):
```JAVA
ViewCompat.setLayoutDirection(recyclerView, ViewCompat.LAYOUT_DIRECTION_RTL);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;For example look at sample application.
&lt;br /&gt;
### Bonus
You may need an &lt;code class=&quot;highlighter-rouge&quot;&gt;RecyclerView.ItemDecoration&lt;/code&gt; to work with &lt;code class=&quot;highlighter-rouge&quot;&gt;ChipsLayoutManager&lt;/code&gt; for fast setup as showed in sample. &lt;br /&gt;
It contained in same package and named &lt;code class=&quot;highlighter-rouge&quot;&gt;SpacingItemDecoration&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;support&quot;&gt;Support&lt;/h2&gt;
&lt;p&gt;BETA is going.
I respond to your founded issues. Just create a ticket if you found something goes wrong.&lt;/p&gt;

&lt;h3 id=&quot;contributors&quot;&gt;Contributors&lt;/h3&gt;
&lt;p&gt;All pull requests are welcome. I’ve tried to make code clean &amp;amp; readable, so the next is up to you. 
I appreciate any help and contributors will be mentioned here.&lt;/p&gt;

&lt;h3 id=&quot;known-issues&quot;&gt;Known issues&lt;/h3&gt;
&lt;p&gt;I create issues in tracking board of known problems.
These issues are going to be fixed in next versions.&lt;/p&gt;

&lt;h3 id=&quot;license-license-for-chipslayoutmanagerhttpsimgshieldsiocrateslrustc-serializesvg&quot;&gt;License &lt;a href=&quot;#&quot;&gt;[license for ChipsLayoutManager](https://img.shields.io/crates/l/rustc-serialize.svg)&lt;/a&gt;&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Copyright 2016 Beloy Oleg, Ukraine.

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Mon, 14 Nov 2016 00:00:00 +0900</pubDate>
        <link>http://android.kmshack.kr/2016/11/14/ChipsLayoutManager/</link>
        <guid isPermaLink="true">http://android.kmshack.kr/2016/11/14/ChipsLayoutManager/</guid>
        
        <category>layoutmanager</category>
        
        
      </item>
    
      <item>
        <title>QRCodeReaderView</title>
        <description>&lt;h1 id=&quot;qrcodereaderview-downloadhttpsapibintraycompackagesdlazaro66mavenqrcodereaderviewimagesdownloadsvg-httpsbintraycomdlazaro66mavenqrcodereaderviewlatestversion-android-arsenalhttpsimgshieldsiobadgeandroid20arsenal-qrcodereaderview-brightgreensvgstyleflathttpandroid-arsenalcomdetails11891&quot;&gt;QRCodeReaderView &lt;a href=&quot;https://bintray.com/dlazaro66/maven/QRCodeReaderView/_latestVersion&quot;&gt;[Download](https://api.bintray.com/packages/dlazaro66/maven/QRCodeReaderView/images/download.svg) &lt;/a&gt; &lt;a href=&quot;http://android-arsenal.com/details/1/1891&quot;&gt;[Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-QRCodeReaderView-brightgreen.svg?style=flat)&lt;/a&gt;&lt;/h1&gt;

&lt;h4 id=&quot;modification-of-zxing-barcode-scanner-project-for-easy-android-qr-code-detection-and-ar-purposes&quot;&gt;Modification of ZXING Barcode Scanner project for easy Android QR-Code detection and AR purposes.&lt;/h4&gt;

&lt;p&gt;This project implements an Android view which show camera and notify when there’s a QR code inside the preview.&lt;/p&gt;

&lt;p&gt;Some Classes of camera controls and autofocus are taken and slightly modified from Barcode Scanner Android App.&lt;/p&gt;

&lt;p&gt;You can also use this for Augmented Reality purposes, as you get QR control points coordinates when decoding.&lt;/p&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Add a “QRCodeReaderView” in the layout editor like you actually do with a button for example.&lt;/li&gt;
  &lt;li&gt;In your onCreate method, you can find the view as usual, using findViewById() function.&lt;/li&gt;
  &lt;li&gt;Create an Activity which implements &lt;code class=&quot;highlighter-rouge&quot;&gt;onQRCodeReadListener&lt;/code&gt;, and let implements required methods or set a &lt;code class=&quot;highlighter-rouge&quot;&gt;onQRCodeReadListener&lt;/code&gt; to the QRCodeReaderView object&lt;/li&gt;
  &lt;li&gt;Make sure you have camera permissions in order to use the library. (https://developer.android.com/training/permissions/requesting.html)&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;com.dlazaro66.qrcodereaderview.QRCodeReaderView&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/qrdecoderview&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Start &amp;amp; Stop camera preview in onPause() and onResume() overriden methods.&lt;/li&gt;
  &lt;li&gt;You can place widgets or views over QRDecoderView.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DecoderActivity&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Activity&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OnQRCodeReadListener&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TextView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultTextView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;QRCodeReaderView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;qrCodeReaderView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;setContentView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;activity_decoder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        
        &lt;span class=&quot;n&quot;&gt;mydecoderview&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QRCodeReaderView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;findViewById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;qrdecoderview&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mydecoderview&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setOnQRCodeReadListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    	&lt;span class=&quot;c1&quot;&gt;// Use this function to enable/disable decoding&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mydecoderview&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setQRDecodingEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Use this function to change the autofocus interval (default is 5 secs)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mydecoderview&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAutofocusInterval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2000L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Use this function to enable/disable Torch&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mydecoderview&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTorchEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Use this function to set front camera preview&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mydecoderview&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setFrontCamera&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Use this function to set back camera preview&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mydecoderview&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setBackCamera&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Called when a QR is decoded&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// &quot;text&quot; : the text encoded in QR&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// &quot;points&quot; : points where QR control points are placed in View&lt;/span&gt;
	&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onQRCodeRead&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PointF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;points&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;resultTextView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
	&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onResume&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onResume&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;qrCodeReaderView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;startCamera&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	
	&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onPause&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onPause&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;qrCodeReaderView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stopCamera&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;add-it-to-your-project&quot;&gt;Add it to your project&lt;/h2&gt;

&lt;p&gt;Add QRCodeReaderView dependency to your build.gradle&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;n&quot;&gt;dependencies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;com.dlazaro66.qrcodereaderview:qrcodereaderview:2.0.1&#39;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Note: There is an issue with gradle 2.10, if you declare your dependency and it can’t be found in jCenter repository (&lt;code class=&quot;highlighter-rouge&quot;&gt;could not find qrcodereaderview.jar Searched in the following locations:&lt;/code&gt; or similar), try to declare the library dependency like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;n&quot;&gt;dependencies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;com.dlazaro66.qrcodereaderview:qrcodereaderview:2.0.1@aar&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;transitive&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;And in some cases, you need to clean your Gradle cache
&lt;code class=&quot;highlighter-rouge&quot;&gt;./gradlew build --refresh-dependencies&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;do-you-want-to-contribute&quot;&gt;Do you want to contribute?&lt;/h2&gt;

&lt;p&gt;Please send a PR or open an issue with your comments&lt;/p&gt;

&lt;h2 id=&quot;libraries-used-in-this-project&quot;&gt;Libraries used in this project&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/zxing/zxing/&quot;&gt;ZXING&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;screenshots&quot;&gt;Screenshots&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;../master/readme_images/app-example.gif?raw=true&quot;&gt;Image&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;developed-by&quot;&gt;Developed By&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;David Lázaro Esparcia&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/_dlazaro&quot;&gt;
  &lt;img alt=&quot;Follow me on Twitter&quot; src=&quot;../master/readme_images/logo-twitter.png?raw=true&quot; /&gt;
&lt;/a&gt;
&lt;a href=&quot;https://es.linkedin.com/pub/david-lázaro-esparcia/49/4b3/342&quot;&gt;
  &lt;img alt=&quot;Add me to Linkedin&quot; src=&quot;../master/readme_images/logo-linkedin.png?raw=true&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;whos-using-it&quot;&gt;Who’s using it&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Does your app use QRCodeReaderView? If you want to be featured on this list drop me a line.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.swapcard.com/&quot;&gt;Swapcard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dlazaro66&quot;&gt;David Lázaro Esparcia&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/saguinav&quot;&gt;Samuel Guirado Navarro&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/danicomas&quot;&gt;Daniel Comas Fernández&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/kboyarshinov&quot;&gt;Kirill Boyarshinov&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;license&quot;&gt;License&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Copyright 2013 David Lázaro

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Sun, 13 Nov 2016 00:00:00 +0900</pubDate>
        <link>http://android.kmshack.kr/2016/11/13/QRCodeReaderView/</link>
        <guid isPermaLink="true">http://android.kmshack.kr/2016/11/13/QRCodeReaderView/</guid>
        
        <category>qrcode</category>
        
        
      </item>
    
      <item>
        <title>PageIndicatorView</title>
        <description>
&lt;p&gt;###&lt;strong&gt;PageIndicatorView&lt;/strong&gt;
&lt;a href=&quot;https://bintray.com/romandanylyk/maven/pageindicatorview/_latestVersion&quot;&gt; [Download](https://api.bintray.com/packages/romandanylyk/maven/pageindicatorview/images/download.svg) &lt;/a&gt;&lt;a href=&quot;https://android-arsenal.com/details/1/4555&quot;&gt;[Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-PageIndicatorView-green.svg?style=true)&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://android-arsenal.com/api?level=14&quot;&gt;[API](https://img.shields.io/badge/API-14%2B-brightgreen.svg?style=flat)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;PageIndicatorView&lt;/code&gt; will simplify your life while you working with Android &lt;code class=&quot;highlighter-rouge&quot;&gt;ViewPager&lt;/code&gt; and need to indicate selected page. It’s easy to setup and customize as you need with run-time preview rendering.&lt;/p&gt;

&lt;p&gt;[](https://github.com/romandanylyk/PageIndicatorView/blob/master/assets/preview_anim_thin_worm.gif?raw=true)&lt;/p&gt;

&lt;p&gt;###&lt;strong&gt;Integration&lt;/strong&gt;
To add &lt;code class=&quot;highlighter-rouge&quot;&gt;pageindicatorview&lt;/code&gt; to your project, first make sure in root &lt;code class=&quot;highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt; you have specified the following repository:
&lt;code class=&quot;highlighter-rouge&quot;&gt;java
    repositories {
        jcenter()
    }
&lt;/code&gt;
&lt;em&gt;Note: by creating new project in Android Studio it will have &lt;code class=&quot;highlighter-rouge&quot;&gt;jcenter&lt;/code&gt; repository specified by default, so you will not need to add it manually.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Once you make sure you have &lt;code class=&quot;highlighter-rouge&quot;&gt;jcenter&lt;/code&gt; repository in your project, all you need to do is to add the following line in &lt;code class=&quot;highlighter-rouge&quot;&gt;dependencies&lt;/code&gt; section of your project &lt;code class=&quot;highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;See latest library version &lt;a href=&quot;https://bintray.com/romandanylyk/maven/pageindicatorview/_latestVersion&quot;&gt; [Download](https://api.bintray.com/packages/romandanylyk/maven/pageindicatorview/images/download.svg) &lt;/a&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;java
compile &#39;com.romandanylyk:pageindicatorview:X.X.X&#39;
&lt;/code&gt;
Keep in mind, that &lt;code class=&quot;highlighter-rouge&quot;&gt;PageIndicatorView&lt;/code&gt; has min &lt;a href=&quot;https://developer.android.com/about/dashboards/index.html&quot;&gt;API level 14&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;###&lt;strong&gt;Usage Sample&lt;/strong&gt;
During implementation of &lt;code class=&quot;highlighter-rouge&quot;&gt;PageIndicatorView&lt;/code&gt; I tried to make it’s setup as easy as possible. 
After you set adapter to your &lt;code class=&quot;highlighter-rouge&quot;&gt;ViewPager&lt;/code&gt;, all you need to do is to &lt;code class=&quot;highlighter-rouge&quot;&gt;setViewPager()&lt;/code&gt; and that’s it &lt;code class=&quot;highlighter-rouge&quot;&gt;PageIndicatorView&lt;/code&gt; will get count from your adapter and start working with instance of your &lt;code class=&quot;highlighter-rouge&quot;&gt;ViewPager&lt;/code&gt; automatically.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;ViewPager&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;viewPager&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ViewPager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;findViewById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;viewPager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;viewPager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAdapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;adapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//instance of android.support.v4.view.PagerAdapter adapter&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;PageIndicatorView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pageIndicatorView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PageIndicatorView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findViewById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pageIndicatorView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pageIndicatorView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setViewPager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;viewPager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Keep in mind that all public methods are also exist as attributes, so you can even setup and customize page indicator without any java code.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;com.rd.PageIndicatorView&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/pageIndicatorView&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;attrs:piv_viewPager=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@id/viewPager&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;###&lt;strong&gt;Customization&lt;/strong&gt;
One of the most important feature of every custom view is ability to customize its look as user need. By calling the following methods (or attributes) you will be able to customize &lt;code class=&quot;highlighter-rouge&quot;&gt;PageIndicatorView&lt;/code&gt; as you need.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//set size&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;setCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;setDynamicCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dynamicCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;setRadius&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;radiusDp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;setPadding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;paddingDp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;setStrokeWidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strokeDp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//set color&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;setUnselectedColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;setSelectedColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//set animation&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;setAnimationDuration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;setAnimationType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AnimationType&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;setInteractiveAnimation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isInteractive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//set selection&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;setProgress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selectingPosition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;progress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;setSelection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;[](https://github.com/romandanylyk/PageIndicatorView/blob/master/assets/prev_attributes.gif?raw=true)&lt;/p&gt;

&lt;p&gt;Here you can see all the animations &lt;code class=&quot;highlighter-rouge&quot;&gt;PageIndicatorView&lt;/code&gt; support.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Support version&lt;/th&gt;
      &lt;th&gt;Preview&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AnimationType.NONE&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;0.0.1&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romandanylyk/PageIndicatorView/master/assets/anim_prev_none.gif&quot;&gt;anim_prev_none&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AnimationType.COLOR&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;0.0.1&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romandanylyk/PageIndicatorView/master/assets/anim_prev_color.gif&quot;&gt;anim_prev_color&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AnimationType.SCALE&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;0.0.1&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romandanylyk/PageIndicatorView/master/assets/anim_prev_scale.gif&quot;&gt;anim_prev_scale&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AnimationType.SLIDE&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;0.0.1&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romandanylyk/PageIndicatorView/master/assets/anim_prev_slide.gif&quot;&gt;anim_prev_slide&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AnimationType.WORM&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;0.0.1&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romandanylyk/PageIndicatorView/master/assets/anim_prev_worm.gif&quot;&gt;anim_prev_worm&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AnimationType.FILL&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;0.0.6&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romandanylyk/PageIndicatorView/master/assets/anim_prev_fill.gif&quot;&gt;anim_prev_worm&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AnimationType.THIN_WORM&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;0.0.7&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romandanylyk/PageIndicatorView/master/assets/anim_prev_thin_worm.gif&quot;&gt;anim_prev_thin_worm&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;###&lt;strong&gt;Release Note&lt;/strong&gt;
See release notes on &lt;a href=&quot;https://github.com/romandanylyk/PageIndicatorView/releases&quot;&gt;github releases&lt;/a&gt; or &lt;a href=&quot;https://bintray.com/romandanylyk/maven/pageindicatorview#release&quot;&gt;Bintray release notes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;###&lt;strong&gt;License&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Copyright 2016 Roman Danylyk

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Sat, 22 Oct 2016 00:00:00 +0900</pubDate>
        <link>http://android.kmshack.kr/2016/10/22/PageIndicatorView/</link>
        <guid isPermaLink="true">http://android.kmshack.kr/2016/10/22/PageIndicatorView/</guid>
        
        <category>indicator</category>
        
        
      </item>
    
      <item>
        <title>DiagonalLayout</title>
        <description>&lt;h1 id=&quot;diagonallayout&quot;&gt;DiagonalLayout&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://android-arsenal.com/details/1/4530&quot;&gt;[Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-DiagonalLayout-brightgreen.svg?style=flat)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With Diagonal Layout explore new styles and approaches on material design&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.github.com/florent37/DiagonalLayout&quot;&gt;[screen](https://raw.githubusercontent.com/florent37/DiagonalLayout/master/media/sample.gif)&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;usage&quot;&gt;Usage&lt;/h1&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;com.github.florent37.diagonallayout.DiagonalLayout&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;250dp&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;diagonal:diagonal_angle=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;10&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;diagonal:diagonal_gravity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;left|right|top|bottom&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:elevation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;10dp&quot;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

        &lt;span class=&quot;nt&quot;&gt;&amp;lt;--&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;YOUR&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;CONTENT&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/com.github.florent37.diagonallayout.DiagonalLayout&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;sample&quot;&gt;Sample&lt;/h1&gt;

&lt;h2 id=&quot;bottom&quot;&gt;Bottom&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.github.com/florent37/DiagonalLayout&quot;&gt;[screen](https://raw.githubusercontent.com/florent37/DiagonalLayout/master/media/sample2_elevation.png)&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;com.github.florent37.diagonallayout.DiagonalLayout&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;250dp&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:elevation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;10dp&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app:diagonal_angle=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;20&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app:diagonal_gravity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;right|bottom&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

        &lt;span class=&quot;nt&quot;&gt;&amp;lt;ImageView&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;android:scaleType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;centerCrop&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;android:src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@drawable/mountains&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/com.github.florent37.diagonallayout.DiagonalLayout&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;top&quot;&gt;Top&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.github.com/florent37/DiagonalLayout&quot;&gt;[screen](https://raw.githubusercontent.com/florent37/DiagonalLayout/master/media/sample2_bottom.png)&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;com.github.florent37.diagonallayout.DiagonalLayout&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;250dp&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:elevation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;10dp&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app:diagonal_angle=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;20&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app:diagonal_gravity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;right|top&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

        &lt;span class=&quot;nt&quot;&gt;&amp;lt;ImageView&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;android:scaleType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;centerCrop&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;android:src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@drawable/mountains&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/com.github.florent37.diagonallayout.DiagonalLayout&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;elevation&quot;&gt;Elevation&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Do not forget to add elevation with&lt;/strong&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;android:elevation=&quot;**dp&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.github.com/florent37/DiagonalLayout&quot;&gt;[screen](https://raw.githubusercontent.com/florent37/DiagonalLayout/master/media/with_elevation_small.png)&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;kenburns&quot;&gt;KenBurns&lt;/h1&gt;

&lt;p&gt;Using &lt;a href=&quot;https://github.com/flavioarfaria/KenBurnsView&quot;&gt;https://github.com/flavioarfaria/KenBurnsView&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.github.com/florent37/DiagonalLayout&quot;&gt;[screen](https://raw.githubusercontent.com/florent37/DiagonalLayout/master/media/sample.gif)&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;com.github.florent37.diagonallayout.DiagonalLayout&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/diagonalLayout&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;250dp&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;diagonal:diagonal_angle=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;10&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;diagonal:diagonal_gravity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;left&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:elevation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;30dp&quot;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

        &lt;span class=&quot;nt&quot;&gt;&amp;lt;com.flaviofaria.kenburnsview.KenBurnsView&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;android:scaleType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;centerCrop&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;android:src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@drawable/background&quot;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

        ...

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/com.github.florent37.diagonallayout.DiagonalLayout&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;#Inspirations&lt;/p&gt;

&lt;p&gt;Exploration of some new styles and approaches on material design. This one here is a user profile for Hollywood personas&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://material.uplabs.com/posts/user-profile-concept&quot;&gt;https://material.uplabs.com/posts/user-profile-concept&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://material.uplabs.com/posts/user-profile-concept&quot;&gt;[screen](https://raw.githubusercontent.com/florent37/DiagonalLayout/master/media/materialup.png)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;#Download&lt;/p&gt;

&lt;p&gt;In your module &lt;a href=&quot;https://bintray.com/florent37/maven/DiagonalLayout/_latestVersion&quot;&gt;[Download](https://api.bintray.com/packages/florent37/maven/DiagonalLayout/images/download.svg)&lt;/a&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;groovy
compile &#39;com.github.florent37:diagonallayout:1.0.2&#39;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;#Logs&lt;/p&gt;

&lt;p&gt;##1.0.1&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Added Elevation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;##1.0.2&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Can setup the diagonal on &lt;em&gt;top&lt;/em&gt; or &lt;em&gt;bottom&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Fixed angle calculation&lt;/li&gt;
  &lt;li&gt;Added flag attributes &lt;code class=&quot;highlighter-rouge&quot;&gt;top|bottom|left|right&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;##1.0.3&lt;/p&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/ZieIony&quot;&gt;ZieIony&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Changed clipping method&lt;/li&gt;
  &lt;li&gt;Changed shadow casting method&lt;/li&gt;
  &lt;li&gt;Removed unnecessary content layout&lt;/li&gt;
  &lt;li&gt;added support for padding&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;#Credits&lt;/p&gt;

&lt;p&gt;Author: Florent Champigny &lt;a href=&quot;http://www.florentchampigny.com/&quot;&gt;http://www.florentchampigny.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://plus.google.com/+florentchampigny&quot;&gt;
  &lt;img alt=&quot;Follow me on Google+&quot; src=&quot;https://raw.githubusercontent.com/florent37/DaVinci/master/mobile/src/main/res/drawable-hdpi/gplus.png&quot; /&gt;
&lt;/a&gt;
&lt;a href=&quot;https://twitter.com/florent_champ&quot;&gt;
  &lt;img alt=&quot;Follow me on Twitter&quot; src=&quot;https://raw.githubusercontent.com/florent37/DaVinci/master/mobile/src/main/res/drawable-hdpi/twitter.png&quot; /&gt;
&lt;/a&gt;
&lt;a href=&quot;https://www.linkedin.com/in/florentchampigny&quot;&gt;
  &lt;img alt=&quot;Follow me on LinkedIn&quot; src=&quot;https://raw.githubusercontent.com/florent37/DaVinci/master/mobile/src/main/res/drawable-hdpi/linkedin.png&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;license&quot;&gt;License&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Copyright 2016 florent37, Inc.

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Sat, 22 Oct 2016 00:00:00 +0900</pubDate>
        <link>http://android.kmshack.kr/2016/10/22/DiagonalLayout/</link>
        <guid isPermaLink="true">http://android.kmshack.kr/2016/10/22/DiagonalLayout/</guid>
        
        <category>diagonal</category>
        
        <category>layout</category>
        
        
      </item>
    
      <item>
        <title>MaterialCamera</title>
        <description>&lt;h1 id=&quot;material-camera&quot;&gt;Material Camera&lt;/h1&gt;

&lt;p&gt;Android’s video recording APIs are very difficult to figure out, especially since a lot of manufacturers
like to mount their camera sensors upside down or sideways. This library is a result of lots of research
and experimentation to get video recording to work universally.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/afollestad/material-camera/master/art/showcase1.png&quot; width=&quot;800px&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;notice&quot;&gt;Notice&lt;/h1&gt;

&lt;p&gt;Please report any issues you have, and include device information. Camera behavior can be unpredictable
across different Android manufacturers and versions, especially on pre-Lollipop devices. I’ve done quite
a bit of testing, but it’s possible I missed something.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Some of this documentation may be outdated, exploration of the library is encouraged.&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;gradle-dependency&quot;&gt;Gradle Dependency&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://bintray.com/drummer-aidan/maven/material-camera/_latestVersion&quot;&gt; [jCenter](https://api.bintray.com/packages/drummer-aidan/maven/material-camera/images/download.svg) &lt;/a&gt;
&lt;a href=&quot;https://travis-ci.org/afollestad/material-camera&quot;&gt;[Build Status](https://travis-ci.org/afollestad/material-camera.svg)&lt;/a&gt;
&lt;a href=&quot;https://www.apache.org/licenses/LICENSE-2.0.html&quot;&gt;[License](https://img.shields.io/badge/license-Apache%202-4EB1BA.svg?style=flat-square)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Gradle dependency is available via &lt;a href=&quot;https://bintray.com/drummer-aidan/maven/material-camera/view&quot;&gt;jCenter&lt;/a&gt;.
jCenter is the default Maven repository used by Android Studio.&lt;/p&gt;

&lt;h3 id=&quot;dependency&quot;&gt;Dependency&lt;/h3&gt;

&lt;p&gt;Add Bintray to your repositories, for some reason this specific library doesn’t seem to work via jCenter
even though all of my other libraries do.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-gradle&quot;&gt;repositories {
    jcenter()
    maven { url &quot;https://dl.bintray.com/drummer-aidan/maven&quot; }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add this in your module’s &lt;code class=&quot;highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt; file:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-gradle&quot;&gt;dependencies {
    // ... other dependencies

    compile &#39;com.afollestad:material-camera:0.4.4&#39;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;basics&quot;&gt;Basics&lt;/h1&gt;

&lt;h3 id=&quot;android-manifest&quot;&gt;Android Manifest&lt;/h3&gt;

&lt;p&gt;First, you have to register two library Activities from your app’s &lt;code class=&quot;highlighter-rouge&quot;&gt;AndroidManifest.xml&lt;/code&gt; file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;activity&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.afollestad.materialcamera.CaptureActivity&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:theme=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@style/MaterialCamera.CaptureActivity&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;activity&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.afollestad.materialcamera.CaptureActivity2&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:theme=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@style/MaterialCamera.CaptureActivity&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Feel free to use your own custom theme. The included themes give the activities a good default look. 
See the sample project for more details.&lt;/p&gt;

&lt;h3 id=&quot;code-for-video&quot;&gt;Code for Video&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CAMERA_RQ&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6969&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; 

&lt;span class=&quot;n&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;saveFolder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Environment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getExternalStorageDirectory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;MaterialCamera Sample&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;saveFolder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mkdirs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RuntimeException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Unable to create save directory, make sure WRITE_EXTERNAL_STORAGE permission is granted.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;MaterialCamera&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                               &lt;span class=&quot;c1&quot;&gt;// Constructor takes an Activity&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;allowRetry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                                  &lt;span class=&quot;c1&quot;&gt;// Whether or not &#39;Retry&#39; is visible during playback&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;autoSubmit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                                 &lt;span class=&quot;c1&quot;&gt;// Whether or not user is allowed to playback videos after recording. This can affect other things, discussed in the next section.&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;saveDir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;saveFolder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                               &lt;span class=&quot;c1&quot;&gt;// The folder recorded videos are saved to&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;primaryColorAttr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;colorPrimary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;             &lt;span class=&quot;c1&quot;&gt;// The theme color used for the camera, defaults to colorPrimary of Activity in the constructor&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;showPortraitWarning&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                         &lt;span class=&quot;c1&quot;&gt;// Whether or not a warning is displayed if the user presses record in portrait orientation&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;defaultToFrontFacing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                       &lt;span class=&quot;c1&quot;&gt;// Whether or not the camera will initially show the front facing camera&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;retryExits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                                 &lt;span class=&quot;c1&quot;&gt;// If true, the &#39;Retry&#39; button in the playback screen will exit the camera instead of going back to the recorder&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;restartTimerOnRetry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                        &lt;span class=&quot;c1&quot;&gt;// If true, the countdown timer is reset to 0 when the user taps &#39;Retry&#39; in playback&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;continueTimerInPlayback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                    &lt;span class=&quot;c1&quot;&gt;// If true, the countdown timer will continue to go down during playback, rather than pausing.&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;videoEncodingBitRate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                     &lt;span class=&quot;c1&quot;&gt;// Sets a custom bit rate for video recording.&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;audioEncodingBitRate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                       &lt;span class=&quot;c1&quot;&gt;// Sets a custom bit rate for audio recording.&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;videoFrameRate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                                &lt;span class=&quot;c1&quot;&gt;// Sets a custom frame rate (FPS) for video recording.&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;qualityProfile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MaterialCamera&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;QUALITY_HIGH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;       &lt;span class=&quot;c1&quot;&gt;// Sets a quality profile, manually setting bit rates or frame rates with other settings will overwrite individual quality profile settings&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;videoPreferredHeight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;720&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                         &lt;span class=&quot;c1&quot;&gt;// Sets a preferred height for the recorded video output.&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;videoPreferredAspect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                     &lt;span class=&quot;c1&quot;&gt;// Sets a preferred aspect ratio for the recorded video output.&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;maxAllowedFileSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;               &lt;span class=&quot;c1&quot;&gt;// Sets a max file size of 5MB, recording will stop if file reaches this limit. Keep in mind, the FAT file system has a file size limit of 4GB.&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;iconRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;drawable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mcam_action_capture&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;// Sets a custom icon for the button used to start recording&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;iconStop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;drawable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mcam_action_stop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;             &lt;span class=&quot;c1&quot;&gt;// Sets a custom icon for the button used to stop recording&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;iconFrontCamera&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;drawable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mcam_camera_front&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;// Sets a custom icon for the button used to switch to the front camera&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;iconRearCamera&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;drawable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mcam_camera_rear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;       &lt;span class=&quot;c1&quot;&gt;// Sets a custom icon for the button used to switch to the rear camera&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;iconPlay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;drawable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;evp_action_play&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;              &lt;span class=&quot;c1&quot;&gt;// Sets a custom icon used to start playback&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;iconPause&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;drawable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;evp_action_pause&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;            &lt;span class=&quot;c1&quot;&gt;// Sets a custom icon used to pause playback&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;iconRestart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;drawable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;evp_action_restart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;// Sets a custom icon used to restart playback&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;labelRetry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mcam_retry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                   &lt;span class=&quot;c1&quot;&gt;// Sets a custom button label for the button used to retry recording, when available&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;labelConfirm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mcam_use_video&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;             &lt;span class=&quot;c1&quot;&gt;// Sets a custom button label for the button used to confirm/submit a recording&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;autoRecordWithDelaySec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                         &lt;span class=&quot;c1&quot;&gt;// The video camera will start recording automatically after a 5 second countdown. This disables switching between the front and back camera initially.&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;autoRecordWithDelayMs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                       &lt;span class=&quot;c1&quot;&gt;// Same as the above, expressed with milliseconds instead of seconds.&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;audioDisabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                              &lt;span class=&quot;c1&quot;&gt;// Set to true to record video without any audio.&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CAMERA_RQ&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;                                 &lt;span class=&quot;c1&quot;&gt;// Starts the camera activity, the result will be sent back to the current Activity&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: For &lt;code class=&quot;highlighter-rouge&quot;&gt;retryExists(true)&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;onActivityResult()&lt;/code&gt; in the &lt;code class=&quot;highlighter-rouge&quot;&gt;Activity&lt;/code&gt; that starts the camera will
receive &lt;code class=&quot;highlighter-rouge&quot;&gt;MaterialCamera.STATUS_RETRY&lt;/code&gt; as the value of the &lt;code class=&quot;highlighter-rouge&quot;&gt;MaterialCamera.STATUS_EXTRA&lt;/code&gt; intent extra.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;length-limiting&quot;&gt;Length Limiting&lt;/h1&gt;

&lt;p&gt;You can specify a time limit for recording. &lt;code class=&quot;highlighter-rouge&quot;&gt;countdownMillis(long)&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;countdownSeconds(float)&lt;/code&gt;, 
and &lt;code class=&quot;highlighter-rouge&quot;&gt;countdownMinutes(float)&lt;/code&gt; are all methods for length limiting.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;MaterialCamera&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;countdownMinutes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.5f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CAMERA_RQ&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;When the countdown reaches 0, recording stops. There are different behaviors that can occur after this based on
&lt;code class=&quot;highlighter-rouge&quot;&gt;autoSubmit&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;autoRetry&lt;/code&gt;:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;autoSubmit(false)&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;allowRetry(true)&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;The user will be able to playback the recording, and the ‘Retry’ button will be visible. This is default behavior.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;autoSubmit(false)&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;allowRetry(false)&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;The user will be able to playback the recording, but the ‘Retry’ button will be hidden.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;autoSubmit(true)&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;allowRetry(false)&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;The user won’t be able to playback the recording, the result will immediately be returned to the starting Activity.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;autoSubmit(true)&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;allowRetry(true)&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;If you don’t specify a length limit, the behavior will be the same as number 3. If you do specify a length limit, the user is allowed to retry, but the countdown timer will continue until it reaches 0. When the countdown is complete, the result will be returned to the starting Activity automatically.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you want the countdown to start immediately when the camera is open, as opposed to when the user presses
‘Record’, you can set &lt;code class=&quot;highlighter-rouge&quot;&gt;countdownImmediately(true)&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;MaterialCamera&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;countdownMinutes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.5f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;countdownImmediately&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CAMERA_RQ&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;code-for-stillshots-pictures&quot;&gt;Code for Stillshots (Pictures)&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;MaterialCamera&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/** all the previous methods can be called, but video ones would be ignored */&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stillShot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// launches the Camera in stillshot mode&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CAMERA_RQ&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;hr /&gt;

&lt;h1 id=&quot;receiving-results&quot;&gt;Receiving Results&lt;/h1&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MainActivity&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AppCompatActivity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CAMERA_RQ&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6969&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;setContentView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;activity_main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        
        &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MaterialCamera&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CAMERA_RQ&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onActivityResult&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requestCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onActivityResult&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;requestCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Received recording or error from MaterialCamera&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;requestCode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CAMERA_RQ&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resultCode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RESULT_OK&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;makeText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Saved to: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getDataString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LENGTH_LONG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getSerializableExtra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MaterialCamera&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ERROR_EXTRA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;makeText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LENGTH_LONG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;licenselicensemd&quot;&gt;&lt;a href=&quot;/LICENSE.md&quot;&gt;LICENSE&lt;/a&gt;&lt;/h1&gt;

&lt;h6 id=&quot;copyright-2016-aidan-follestad&quot;&gt;Copyright 2016 Aidan Follestad&lt;/h6&gt;

&lt;p&gt;Licensed under the Apache License, Version 2.0 (the “License”);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at&lt;/p&gt;

&lt;p&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/p&gt;

&lt;p&gt;Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an “AS IS” BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.&lt;/p&gt;

</description>
        <pubDate>Wed, 19 Oct 2016 00:00:00 +0900</pubDate>
        <link>http://android.kmshack.kr/2016/10/19/MaterialCamera/</link>
        <guid isPermaLink="true">http://android.kmshack.kr/2016/10/19/MaterialCamera/</guid>
        
        <category>material</category>
        
        <category>camera</category>
        
        
      </item>
    
      <item>
        <title>ImageTransition</title>
        <description>&lt;h1 id=&quot;imagetransition&quot;&gt;ImageTransition&lt;/h1&gt;

&lt;p&gt;… is a small android library to transition between a circular ImageView from one Activity to a rectangular ImageView in the launched Activity.&lt;/p&gt;

&lt;h2 id=&quot;gradle-dependency&quot;&gt;Gradle dependency&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;compile &#39;com.appeaser.imagetransitionlibrary:imagetransitionlibrary:0.0.1&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;walkthrough&quot;&gt;Walkthrough&lt;/h2&gt;
&lt;p&gt;Following gif has been taken from the sample application available here: &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.appeaser.imagetransition&quot;&gt;&lt;img alt=&quot;Get it on Google Play&quot; height=&quot;45px&quot; src=&quot;https://play.google.com/intl/en_us/badges/images/apps/en-play-badge-border.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://github.com/vikramkakkar/ImageTransition/blob/master/img/image_transition.gif?raw=true&quot; width=&quot;300&quot; height=&quot;533&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;The transition has been slowed down for demo purposes.&lt;/p&gt;

&lt;h2 id=&quot;components&quot;&gt;Components&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;ImageTransition:&lt;/strong&gt; &lt;a href=&quot;https://developer.android.com/reference/android/transition/Transition.html&quot;&gt;Transition&lt;/a&gt; based on &lt;a href=&quot;https://developer.android.com/reference/android/transition/ChangeBounds.html&quot;&gt;ChangeBounds&lt;/a&gt; that provides animation support between a circular and rectangular ImageView (implemented as TransitionImageView) residing in two different activities. Works on API version &amp;gt;= 21.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TransitionImageView:&lt;/strong&gt; A modified version of Henning Dodenhof’s &lt;a href=&quot;https://github.com/hdodenhof/CircleImageView&quot;&gt;CircleImageView&lt;/a&gt;. Transition animators are run on this widget.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ImageTransitionUtils:&lt;/strong&gt; Provides &lt;a href=&quot;https://developer.android.com/reference/android/support/v4/app/SharedElementCallback.html&quot;&gt;SharedElementCallback&lt;/a&gt; that is used to set values accessed in &lt;code class=&quot;highlighter-rouge&quot;&gt;ImageTransition&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ImageTransitionCompat:&lt;/strong&gt; &lt;em&gt;under development&lt;/em&gt; &lt;a href=&quot;https://developer.android.com/reference/android/support/transition/Transition.html&quot;&gt;Transition&lt;/a&gt; based on &lt;a href=&quot;https://developer.android.com/reference/android/support/transition/ChangeBounds.html&quot;&gt;ChangeBounds&lt;/a&gt; that provides animation support between a circular and rectangular ImageView (implemented as TransitionImageView) residing in the same activity or fragment. Requires API version &amp;gt;= 14.&lt;/p&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Use com.appeaser.imagetransitionlibrary.TransitionImageView in place of ImageView. The &lt;code class=&quot;highlighter-rouge&quot;&gt;rounding&lt;/code&gt; value can be set using &lt;code class=&quot;highlighter-rouge&quot;&gt;app:tiv_rounding&lt;/code&gt; attribute. Value must be within [0,1] - &lt;strong&gt;0&lt;/strong&gt; for no rounding, &lt;strong&gt;1&lt;/strong&gt; for perfect rounding. Set &lt;code class=&quot;highlighter-rouge&quot;&gt;android:transitionName&lt;/code&gt; attribute.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;com.appeaser.imagetransitionlibrary.TransitionImageView
    android:id=&quot;@+id/image&quot;
    android:layout_width=&quot;80dp&quot;
    android:layout_height=&quot;80dp&quot;
    android:scaleType=&quot;centerCrop&quot;
    android:transitionName=&quot;@string/iv_transition_name&quot;
    app:tiv_rounding=&quot;0&quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Note: &lt;code class=&quot;highlighter-rouge&quot;&gt;com.appeaser.imagetransitionlibrary.TransitionImageView&lt;/code&gt; only works with &lt;code class=&quot;highlighter-rouge&quot;&gt;scaleType=&quot;centerCrop&quot;&lt;/code&gt;. This restriction has been inherited from Henning Dodenhof’s &lt;a href=&quot;https://github.com/hdodenhof/CircleImageView&quot;&gt;CircleImageView&lt;/a&gt;.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Provide &lt;code class=&quot;highlighter-rouge&quot;&gt;@transition/itl_image_transition&lt;/code&gt; as the value for &lt;code class=&quot;highlighter-rouge&quot;&gt;android:windowSharedElementEnterTransition&lt;/code&gt; &amp;amp; &lt;code class=&quot;highlighter-rouge&quot;&gt;android:windowSharedElementExitTransition&lt;/code&gt; under your Activity theme in &lt;code class=&quot;highlighter-rouge&quot;&gt;styles.xml&lt;/code&gt;:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;style name=&quot;AppTheme&quot; parent=&quot;Theme.AppCompat.Light.DarkActionBar&quot;&amp;gt;
	&amp;lt;item name=&quot;colorPrimary&quot;&amp;gt;...&amp;lt;/item&amp;gt;
    &amp;lt;item name=&quot;colorPrimaryDark&quot;&amp;gt;...&amp;lt;/item&amp;gt;
    &amp;lt;item name=&quot;colorAccent&quot;&amp;gt;...&amp;lt;/item&amp;gt;

    ....
    ....

    &amp;lt;-- @transition/itl_image_transition is provided by ImageTransition library --&amp;gt;
    &amp;lt;item name=&quot;android:windowSharedElementEnterTransition&quot;&amp;gt;@transition/itl_image_transition&amp;lt;/item&amp;gt;
    &amp;lt;item name=&quot;android:windowSharedElementExitTransition&quot;&amp;gt;@transition/itl_image_transition&amp;lt;/item&amp;gt;
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This should ideally be placed in your &lt;code class=&quot;highlighter-rouge&quot;&gt;values-v21/styles.xml&lt;/code&gt; file. Refer to the sample app for an example.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;In the second Activity’s &lt;code class=&quot;highlighter-rouge&quot;&gt;onCreate(Bundle)&lt;/code&gt; method, add the following line of code:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public class SecondActivity extends AppCompatActivity {

    ....
    ....

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        ....
        ....

        // SharedElementCallback needs be set in the second Activity.
        // See ImageTrainsitionUtil for more info.
        setEnterSharedElementCallback(ImageTransitionUtil.DEFAULT_SHARED_ELEMENT_CALLBACK);
    }

    ....
    ....

    @Override
    public void onBackPressed() {
        supportFinishAfterTransition();
        super.onBackPressed();
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The sample app shows this approach.&lt;/p&gt;

&lt;p&gt;Note: &lt;code class=&quot;highlighter-rouge&quot;&gt;ImageTransitionUtil.DEFAULT_SHARED_ELEMENT_CALLBACK&lt;/code&gt; can be used only when transitioning from &lt;code class=&quot;highlighter-rouge&quot;&gt;tiv_rounding=&quot;1&quot;&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;tiv_rounding=&quot;0&quot;&lt;/code&gt;. If you’re transitioning between any other values, use:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;setEnterSharedElementCallback(ImageTransitionUtil
    .prepareSharedElementCallbackFor(_your start rounding value_, _your end rounding value_));
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you’d like to change the duration of the transition, or use the transition within your own set of transitions, or use a different interpolator, include the following:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;transitionSet
    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    android:interpolator=&quot;your interpolator&quot;&amp;gt;

    ....
    ....

    &amp;lt;transition
        class=&quot;com.appeaser.imagetransitionlibrary.ImageTransition&quot;
        android:duration=&quot;your duration&quot; /&amp;gt;

    ....
    ....

&amp;lt;/transitionSet&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The library declares its min SDK version as 14. If your app’s &lt;em&gt;minSdkVersion&lt;/em&gt; is set to a lower value, include the following in your app’s manifest:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;manifest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;xmlns:tools=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.android.com/tools&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;package=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;...&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;uses-sdk&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tools:overrideLibrary=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.appeaser.imagetransitionlibrary&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;application&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        ...
        ...
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/application&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/manifest&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;api-version-requirements&quot;&gt;API version requirements&lt;/h2&gt;
&lt;p&gt;For image transition between activities, version 21 or above is required.
&lt;em&gt;Under development&lt;/em&gt; For image transition within an activity, use &lt;code class=&quot;highlighter-rouge&quot;&gt;ImageTransitionCompat&lt;/code&gt; which works on API 14 and above. Note that &lt;code class=&quot;highlighter-rouge&quot;&gt;ImageTransitionCompat&lt;/code&gt; will not work if defined in XML.&lt;/p&gt;

&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h2&gt;

&lt;p&gt;As mentioned above, the library depends on Henning Dodenhof’s &lt;a href=&quot;https://github.com/hdodenhof/CircleImageView&quot;&gt;CircleImageView&lt;/a&gt;, released under Apache Licence, version 2.0. Many thanks to Henning Dodenhof for open-sourcing their work.&lt;/p&gt;

&lt;p&gt;The example app uses &lt;a href=&quot;http://square.github.io/picasso/&quot;&gt;Picasso&lt;/a&gt;, released under Apache Licence, version 2.0.&lt;/p&gt;

&lt;h2 id=&quot;license&quot;&gt;License&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Copyright (c) 2016 Vikram Kakkar

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Sun, 16 Oct 2016 00:00:00 +0900</pubDate>
        <link>http://android.kmshack.kr/2016/10/16/ImageTransition/</link>
        <guid isPermaLink="true">http://android.kmshack.kr/2016/10/16/ImageTransition/</guid>
        
        <category>transition</category>
        
        
      </item>
    
      <item>
        <title>FoldableLayout</title>
        <description>&lt;h1 id=&quot;foldablelayout&quot;&gt;FoldableLayout&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://maven-badges.herokuapp.com/maven-central/com.alexvasilkov/foldable-layout&quot;&gt;[Maven Central](https://maven-badges.herokuapp.com/maven-central/com.alexvasilkov/foldable-layout/badge.svg)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Android widgets to implement folding animation.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.youtube.com/watch?v=-_QcWMh-O5g&quot;&gt;[Demo video](http://img.youtube.com/vi/-_QcWMh-O5g/0.jpg)&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;sample-app&quot;&gt;Sample app&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;http://play.google.com/store/apps/details?id=com.alexvasilkov.foldablelayout.sample&quot;&gt;
&lt;img alt=&quot;Get it on Google Play&quot; src=&quot;https://play.google.com/intl/en_us/badges/images/apps/en-play-badge-border.png&quot; height=&quot;64&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;usage&quot;&gt;Usage&lt;/h4&gt;

&lt;p&gt;Note: &lt;strong&gt;minimum Android SDK version is 14&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Add dependency to your build.gradle file:
&lt;code class=&quot;highlighter-rouge&quot;&gt;groovy
compile &#39;com.alexvasilkov:foldable-layout:1.2.0&#39;
&lt;/code&gt;
&lt;a href=&quot;https://github.com/alexvasilkov/FoldableLayout/wiki/Unfoldable-details-usage&quot;&gt;Unfoldable details usage&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/alexvasilkov/FoldableLayout/wiki/Foldable-list-usage&quot;&gt;Foldable list usage&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/alexvasilkov/FoldableLayout/wiki/API-reference&quot;&gt;API reference&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See &lt;a href=&quot;https://github.com/alexvasilkov/FoldableLayout/tree/master/sample&quot;&gt;sample app sources&lt;/a&gt; for complete usage example.&lt;/p&gt;

&lt;h4 id=&quot;basic-library-concepts&quot;&gt;Basic library concepts&lt;/h4&gt;

&lt;p&gt;Read &lt;a href=&quot;http://cases.azoft.com/creating-paper-folding-animation-in-android/&quot;&gt;this blog post&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;license&quot;&gt;License&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Thu, 13 Oct 2016 00:00:00 +0900</pubDate>
        <link>http://android.kmshack.kr/2016/10/13/FoldableLayout/</link>
        <guid isPermaLink="true">http://android.kmshack.kr/2016/10/13/FoldableLayout/</guid>
        
        <category>fold</category>
        
        <category>layout</category>
        
        
      </item>
    
      <item>
        <title>SwipeActionView</title>
        <description>&lt;h1 id=&quot;swipe-action-view&quot;&gt;Swipe Action View&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/Tunous/SwipeActionView&quot;&gt;[Build Status](https://travis-ci.org/Tunous/SwipeActionView.svg?branch=master)&lt;/a&gt;
&lt;a href=&quot;https://jitpack.io/#Tunous/SwipeActionView&quot;&gt;[Release](https://jitpack.io/v/Tunous/SwipeActionView.svg)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;SwipeActionView is a swipe-able view, which allows users to perform actions by swiping it to the left or right side.&lt;/p&gt;

&lt;h1 id=&quot;table-of-contents&quot;&gt;Table of contents&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#preview&quot;&gt;Preview&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#quick-example&quot;&gt;Quick Example&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#sample&quot;&gt;Sample&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#idea&quot;&gt;The idea&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#container&quot;&gt;Container&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#bg-views&quot;&gt;Background views&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#gesture-listener&quot;&gt;Gesture listener&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#disabling-gestures&quot;&gt;Disabling gestures&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ripple-animations&quot;&gt;Ripple animations&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#click-listeners&quot;&gt;Click listeners&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#attr&quot;&gt;Attributes&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#attr-alwaysDrawBackground&quot;&gt;sav_alwaysDrawBackground&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#attr-rippleTakesPadding&quot;&gt;sav_rippleTakesPadding&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#attr-swipeLeftRippleColor&quot;&gt;sav_swipeLeftRippleColor&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#attr-swipeRightRippleColor&quot;&gt;sav_swipeRightRippleColor&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#attr-tools&quot;&gt;Tools attributes&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#attr-tools-previewBackground&quot;&gt;sav_tools_previewBackground&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#attr-tools-previewRipple&quot;&gt;sav_tools_previewRipple&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#animations&quot;&gt;Animations&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#credits&quot;&gt;Credits&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;a-idpreviewpreviewa&quot;&gt;&lt;a id=&quot;preview&quot;&gt;Preview&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;art/preview.gif&quot;&gt;Preview&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;a-idinstallationinstallationa&quot;&gt;&lt;a id=&quot;installation&quot;&gt;Installation&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Add the JitPack repository to your root &lt;code class=&quot;highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt;:
&lt;code class=&quot;highlighter-rouge&quot;&gt;
allprojects {
    repositories {
        maven { url &quot;https://jitpack.io&quot; }
    }
}
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And add the dependency in your module’s &lt;code class=&quot;highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt;:
&lt;code class=&quot;highlighter-rouge&quot;&gt;
dependencies {
    compile &#39;com.github.Tunous:SwipeActionView:0.1.0&#39;
}
&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&quot;a-idquick-examplequick-examplea&quot;&gt;&lt;a id=&quot;quick-example&quot;&gt;Quick example&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Adding &lt;code class=&quot;highlighter-rouge&quot;&gt;SwipeActionView&lt;/code&gt; to your projects requires only adding it to XML and setting up &lt;code class=&quot;highlighter-rouge&quot;&gt;SwipeGestureListener&lt;/code&gt;.
Below example will create &lt;code class=&quot;highlighter-rouge&quot;&gt;TextView&lt;/code&gt; that can be swiped both to the left or right side with two icons behind.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;me.thanel.swipeactionview.SwipeActionView&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/swipe_view&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:background=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;?colorPrimary&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;ImageView&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;24dp&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;24dp&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@mipmap/ic_launcher&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;ImageView&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;24dp&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;24dp&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_gravity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;end&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@mipmap/ic_launcher&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
        
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;TextView&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:padding=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;16dp&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Swipe me&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/me.thanel.swipeactionview.SwipeActionView&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SwipeActionView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;swipeView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SwipeActionView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;findViewById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;swipe_view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;swipeView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setSwipeGestureListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SwipeGestureListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onSwipedLeft&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@NotNull&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SwipeActionView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;swipeActionView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;showToast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Swiped left&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onSwipedRight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@NotNull&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SwipeActionView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;swipeActionView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;showToast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Swiped right&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;a-idsamplesamplea&quot;&gt;&lt;a id=&quot;sample&quot;&gt;Sample&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;For an example implementation of &lt;code class=&quot;highlighter-rouge&quot;&gt;SwipeActionView&lt;/code&gt; see the included &lt;a href=&quot;https://github.com/Tunous/SwipeActionView/tree/master/sample&quot;&gt;sample&lt;/a&gt; project.&lt;/p&gt;

&lt;p&gt;You can manually compile the apk using source code or download from the &lt;a href=&quot;https://github.com/Tunous/SwipeActionView/releases&quot;&gt;releases page&lt;/a&gt; of this repository.&lt;/p&gt;

&lt;h1 id=&quot;a-idideathe-ideaa&quot;&gt;&lt;a id=&quot;idea&quot;&gt;The idea&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;The main idea behind this library is a concept of &lt;a href=&quot;#container&quot;&gt;container&lt;/a&gt; and &lt;a href=&quot;#bg-views&quot;&gt;background views&lt;/a&gt;. It allows for complete control over the look of the created views.&lt;/p&gt;

&lt;p&gt;In the &lt;a href=&quot;#quick-example&quot;&gt;quick example&lt;/a&gt; section you can see that the &lt;code class=&quot;highlighter-rouge&quot;&gt;SwipeActionView&lt;/code&gt; has three child views. The first two are &lt;a href=&quot;#bg-views&quot;&gt;background views&lt;/a&gt;, and the last one is the &lt;a href=&quot;#container&quot;&gt;container&lt;/a&gt;. To create working version of &lt;code class=&quot;highlighter-rouge&quot;&gt;SwipeActionView&lt;/code&gt;, you are only required to specify single background view and container. Second background view can be added when you want to be able to swipe in both directions.&lt;/p&gt;

&lt;h3 id=&quot;a-idcontainercontainera&quot;&gt;&lt;a id=&quot;container&quot;&gt;Container&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The container is a view which is drawn above other views. In the default state, this is the only visible view, and it is what gets moved when users perform swipe gestures. It can be either a simple &lt;code class=&quot;highlighter-rouge&quot;&gt;TextView&lt;/code&gt;, custom view or even some sort of view group like &lt;code class=&quot;highlighter-rouge&quot;&gt;LinearLayout&lt;/code&gt;. There is no limit for that, which allows you to gain complete control over the look of your views.&lt;/p&gt;

&lt;h3 id=&quot;a-idbg-viewsbackground-viewsa&quot;&gt;&lt;a id=&quot;bg-views&quot;&gt;Background views&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Background views are the mostly invisible part of &lt;code class=&quot;highlighter-rouge&quot;&gt;SwipeActionView&lt;/code&gt;. They get revealed only when users start performing swipe gestures.&lt;/p&gt;

&lt;p&gt;You can specify for which swipe direction each of them corresponds by setting their &lt;code class=&quot;highlighter-rouge&quot;&gt;layout_gravity&lt;/code&gt; attribute. 
Default value or setting it to either &lt;code class=&quot;highlighter-rouge&quot;&gt;left&lt;/code&gt; and/or &lt;code class=&quot;highlighter-rouge&quot;&gt;start&lt;/code&gt; means that it will start appearing when users perform right swipe gesture. On the other hand setting it to &lt;code class=&quot;highlighter-rouge&quot;&gt;end&lt;/code&gt; and/or &lt;code class=&quot;highlighter-rouge&quot;&gt;right&lt;/code&gt; will result in the view to start appearing when users swipe to the left. This doesn’t mean that you aren’t allowed to use other &lt;code class=&quot;highlighter-rouge&quot;&gt;layout_gravity&lt;/code&gt; options like &lt;code class=&quot;highlighter-rouge&quot;&gt;center&lt;/code&gt;. They will still control the view as usual and will be ignored by &lt;code class=&quot;highlighter-rouge&quot;&gt;SwipeActionView&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This behavior allows you to add single background and by specifying its &lt;code class=&quot;highlighter-rouge&quot;&gt;layout_gravity&lt;/code&gt; determine whether &lt;code class=&quot;highlighter-rouge&quot;&gt;SwipeActionView&lt;/code&gt; should be possible to be swiped only to the left or right side.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; There can be only one view for each direction. This means that if one of them is placed on the left side, the second one must be put on the right side to avoid errors.&lt;/p&gt;

&lt;h3 id=&quot;a-ididea-exampleexamplea&quot;&gt;&lt;a id=&quot;idea-example&quot;&gt;Example&lt;/a&gt;&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;me.thanel.swipeactionview.SwipeActionView&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/swipe_view&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:background=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;?colorPrimary&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;--&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;First&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;background&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;view.&lt;/span&gt;
        &lt;span class=&quot;err&quot;&gt;It&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;will&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;located&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;side&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;will&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;allow&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;perform&lt;/span&gt;
        &lt;span class=&quot;err&quot;&gt;right&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;swipe&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;gesture.&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;ImageView&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;24dp&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;24dp&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@mipmap/ic_launcher&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;--&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Second&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;background&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;view.&lt;/span&gt;
        &lt;span class=&quot;err&quot;&gt;This&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;one&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;will&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;located&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;right&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;side&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;allow&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;perform&lt;/span&gt;
        &lt;span class=&quot;err&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;swipe&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;gesture&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;its&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;layout_gravity&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;changed&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&quot;end&quot;.&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;ImageView&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;24dp&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;24dp&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_gravity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;end&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@mipmap/ic_launcher&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
        
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;--&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Container.&lt;/span&gt;
        &lt;span class=&quot;err&quot;&gt;This&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;what&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;will&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;see&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;being&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;swiped.&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;TextView&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:padding=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;16dp&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Swipe me&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/me.thanel.swipeactionview.SwipeActionView&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;a-idgesture-listenergesture-listenera&quot;&gt;&lt;a id=&quot;gesture-listener&quot;&gt;Gesture listener&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;In order to be able to perform actions when users swipe the &lt;code class=&quot;highlighter-rouge&quot;&gt;SwipeActionView&lt;/code&gt; you have to setup the listener with the &lt;code class=&quot;highlighter-rouge&quot;&gt;setSwipeGestureListener(SwipeGestureListener)&lt;/code&gt; method. It takes &lt;code class=&quot;highlighter-rouge&quot;&gt;SwipeGestureListener&lt;/code&gt; as a parameter.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SwipeGestureListener&lt;/code&gt; consists of two methods. One for performing an action when the view is swiped to the left and one when it is swiped to the right side.&lt;/p&gt;

&lt;p&gt;Each of these methods returns &lt;code class=&quot;highlighter-rouge&quot;&gt;Boolean&lt;/code&gt; as a result. Most of the time you’ll want to return &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt; here. Returning &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt; is designed for advanced usage. By doing so, the view won’t be automatically animated to the original position but will stay at the full translation. This allows you to manipulate the content of the visible background view. One great example of this is displaying progress wheel and manually returning the view to the original position once some long action finishes execution.&lt;/p&gt;

&lt;p&gt;To return the view to its original position you can call the &lt;code class=&quot;highlighter-rouge&quot;&gt;moveToOriginalPosition()&lt;/code&gt; method at any time.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;swipeView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setSwipeGestureListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SwipeGestureListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onSwipedLeft&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@NotNull&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SwipeActionView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;swipeActionView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;showToast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Swiped left&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Returning true automatically moves view to original position&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onSwipedRight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@NotNull&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SwipeActionView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;swipeActionView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;showToast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Swiped right&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        
        &lt;span class=&quot;c1&quot;&gt;// Returning false requires calling moveToOriginalPosition() manually to&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// reset view to original position&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Here we are using optional parameter which will move our view to&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// original position after delay in ms. In this case it&#39;s 2s.&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;swipeActionView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;moveToOriginalPosition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;a-iddisabling-gesturesdisabling-gesturesa&quot;&gt;&lt;a id=&quot;disabling-gestures&quot;&gt;Disabling gestures&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;If you want to dynamically enable or disable gesture in a specific direction you can use the &lt;code class=&quot;highlighter-rouge&quot;&gt;setDirectionEnabled(SwipeDirection, Boolean)&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The gesture enabling part is controlled by presence and visibility of background views. This method is only provided for convenience since it can also be changed by switching visibility of background views. It was coded like this so the specific swipe directions can be disabled by default from XML using &lt;code class=&quot;highlighter-rouge&quot;&gt;visibility&lt;/code&gt; attribute on views corresponding to these directions.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;swipeView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDirectionEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SwipeDirection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;a-idripple-animationsripple-animationsa&quot;&gt;&lt;a id=&quot;ripple-animations&quot;&gt;Ripple animations&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SwipeActionView&lt;/code&gt; comes with optional support for displaying ripple animations when gestures are performed. All you have to do to enable them is to give them a color from XML or code. To do so from the code, you can use the &lt;code class=&quot;highlighter-rouge&quot;&gt;setRippleColor(SwipeDirection, Int)&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;To disable ripple animations you can enter &lt;code class=&quot;highlighter-rouge&quot;&gt;-1&lt;/code&gt; as value for color.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;swipeView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setRippleColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SwipeDirection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;BLUE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;a-idclick-listenersclick-listenersa&quot;&gt;&lt;a id=&quot;click-listeners&quot;&gt;Click listeners&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SwipeActionView&lt;/code&gt; makes sure that any click listeners will work correctly. You can use &lt;code class=&quot;highlighter-rouge&quot;&gt;setClickListener(View.OnClickListener)&lt;/code&gt; as usual and they should work, including views located in the container.&lt;/p&gt;

&lt;p&gt;The only exception is that you shouldn’t add click listeners for background views. This library wasn’t designed to add support for this behavior. If it’s possible then, that’s only a positive side effect. You are better of with using libraries such as &lt;a href=&quot;https://github.com/daimajia/AndroidSwipeLayout&quot;&gt;AndroidSwipeLayout&lt;/a&gt; instead.&lt;/p&gt;

&lt;h1 id=&quot;a-idattrattributesa&quot;&gt;&lt;a id=&quot;attr&quot;&gt;Attributes&lt;/a&gt;&lt;/h1&gt;

&lt;h4 id=&quot;a-idattr-alwaysdrawbackgroundappsavalwaysdrawbackgroundtruefalsea&quot;&gt;&lt;a id=&quot;attr-alwaysDrawBackground&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;app:sav_alwaysDrawBackground=&quot;true|false&quot;&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;To reduce overdraw &lt;code class=&quot;highlighter-rouge&quot;&gt;SwipeActionView&lt;/code&gt; only draws parts of the main background and background views which become visible due to swipe gesture. This is not always what you want as it could break any container views with transparency. A good example where you would want to use this attribute is when you had &lt;code class=&quot;highlighter-rouge&quot;&gt;CardView&lt;/code&gt; as your container.&lt;/p&gt;

&lt;h4 id=&quot;a-idattr-rippletakespaddingappsavrippletakespaddingtruefalsea&quot;&gt;&lt;a id=&quot;attr-rippleTakesPadding&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;app:sav_rippleTakesPadding=&quot;true|false&quot;&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;If you want ripple effect to take padding together with container view you can set this attribute to true.&lt;/p&gt;

&lt;h4 id=&quot;a-idattr-swipeleftripplecolorappsavswipeleftripplecolorcolora&quot;&gt;&lt;a id=&quot;attr-swipeLeftRippleColor&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;app:sav_swipeLeftRippleColor=&quot;@color&quot;&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Sets color for ripple displayed when users swipe left.&lt;/p&gt;

&lt;h4 id=&quot;a-idattr-swiperightripplecolorappsavswiperightripplecolorcolora&quot;&gt;&lt;a id=&quot;attr-swipeRightRippleColor&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;app:sav_swipeRightRippleColor=&quot;@color&quot;&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Sets color for ripple displayed when users swipe right.&lt;/p&gt;

&lt;h2 id=&quot;a-idattr-toolstools-attributesa&quot;&gt;&lt;a id=&quot;attr-tools&quot;&gt;Tools attributes&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SwipeActionView&lt;/code&gt; has special attributes used only in the editor mode. They make it possible to preview ripples or contents of background views without worrying about side effects. They are entirely ignored when running on the device.&lt;/p&gt;

&lt;h4 id=&quot;a-idattr-tools-previewbackgroundappsavtoolspreviewbackgroundswipeleftswiperighta&quot;&gt;&lt;a id=&quot;attr-tools-previewBackground&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;app:sav_tools_previewBackground=&quot;swipeLeft|swipeRight&quot;&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Shows background view for swipe left or right gesture.&lt;/p&gt;

&lt;h4 id=&quot;a-idattr-tools-previewrippleappsavtoolspreviewrippleswipelefta&quot;&gt;&lt;a id=&quot;attr-tools-previewRipple&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;app:sav_tools_previewRipple=&quot;swipeLeft&quot;&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Shows ripple for swipe left or right gesture.&lt;/p&gt;

&lt;h1 id=&quot;a-idanimationsanimationsa&quot;&gt;&lt;a id=&quot;animations&quot;&gt;Animations&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SwipeActionView&lt;/code&gt; also comes with support for custom animations. There are two listeners that you can set in your code. They will be called with current swipe progress while users perform swipe gesture.&lt;/p&gt;

&lt;p&gt;By default, there is only one animator included which scales the background views. You can use it as an example of how to implement custom animations or use it directly if it’s good enough for you.&lt;/p&gt;

&lt;h1 id=&quot;a-idcreditscreditsa&quot;&gt;&lt;a id=&quot;credits&quot;&gt;Credits&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;This library wouldn’t be created without help and work of &lt;a href=&quot;https://github.com/brianrobles204&quot;&gt;Brian Robles&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;His &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.brianrobles204.karmamachine&quot;&gt;KarmaMachine&lt;/a&gt; Reddit application was my direct inspiration when I was creating it for my application.
He also created &lt;code class=&quot;highlighter-rouge&quot;&gt;SwipeRippleDrawable&lt;/code&gt; and allowed me to &lt;a href=&quot;https://github.com/Tunous/SwipeActionView/blob/master/library/src/main/kotlin/me/thanel/swipeactionview/SwipeRippleDrawable.kt&quot;&gt;reimplement&lt;/a&gt; it for purposes of this library.
&lt;strong&gt;Huge thanks&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&quot;a-idlicenselicensea&quot;&gt;&lt;a id=&quot;license&quot;&gt;License&lt;/a&gt;&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Copyright © 2016 Łukasz Rutkowski

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Wed, 12 Oct 2016 00:00:00 +0900</pubDate>
        <link>http://android.kmshack.kr/2016/10/12/SwipeActionView/</link>
        <guid isPermaLink="true">http://android.kmshack.kr/2016/10/12/SwipeActionView/</guid>
        
        <category>swipe</category>
        
        
      </item>
    
      <item>
        <title>Plaid</title>
        <description>
</description>
        <pubDate>Wed, 12 Oct 2016 00:00:00 +0900</pubDate>
        <link>http://android.kmshack.kr/2016/10/12/Plaid/</link>
        <guid isPermaLink="true">http://android.kmshack.kr/2016/10/12/Plaid/</guid>
        
        <category>plaid</category>
        
        
      </item>
    
  </channel>
</rss>
