<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android UI OpenSource</title>
    <description>Collection of OpenSource for Android UI.</description>
    <link>http://android.kmshack.kr/</link>
    <atom:link href="http://android.kmshack.kr/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 02 Jan 2017 22:35:43 +0900</pubDate>
    <lastBuildDate>Mon, 02 Jan 2017 22:35:43 +0900</lastBuildDate>
    <generator>Jekyll v3.0.1</generator>
    
      <item>
        <title>Text Decorator</title>
        <description>&lt;h1 id=&quot;text-decorator&quot;&gt;Text Decorator&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/nntuyen/text-decorator&quot;&gt;[Build Status](https://travis-ci.org/nntuyen/text-decorator.svg?branch=master)&lt;/a&gt;
&lt;a href=&quot;http://android-arsenal.com/details/1/4982&quot;&gt;[Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-Text%20Decorator-brightgreen.svg?style=flat)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Decorate your TextView easily&lt;/p&gt;

&lt;p&gt;[](screenshot/screenshot2.gif)&lt;/p&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;TextDecorator&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;decorate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;textView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTextColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;colorAccent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setBackgroundColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;colorPrimary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;strikethrough&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTextStyle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Typeface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;BOLD&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Typeface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ITALIC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTypeface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;serif&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;70&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;77&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setSuperscript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;78&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;86&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setSubscript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;87&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;92&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;underline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;120&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;blur&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BlurMaskFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Blur&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;NORMAL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;makeTextClickable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OnTextClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;makeText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MainActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LENGTH_SHORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;250&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;270&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;TextDecorator&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;decorate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tvContent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTextColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;colorAccent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Lorem&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;amet&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setBackgroundColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;colorPrimary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;dolor&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;elit&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;strikethrough&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Duis&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Praesent&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;underline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sodales&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;quam&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setSubscript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;vitae&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;makeTextClickable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OnTextClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;makeText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MainActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LENGTH_SHORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;porta&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;commodo&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;tempor venenatis nulla&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTextColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;holo_green_light&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;porta&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;commodo&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;tempor venenatis nulla&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;download&quot;&gt;Download&lt;/h2&gt;

&lt;p&gt;Add this to your root build.gradle
&lt;code class=&quot;highlighter-rouge&quot;&gt;javascript
allprojects {
  repositories {
    ...
    maven { 
        url &quot;https://oss.sonatype.org/content/repositories/snapshots&quot; 
    }
}
&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;com.tuyenmonkey:text-decorator:1.0.0-SNAPSHOT&#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;license&quot;&gt;License&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Copyright 2016 Tuyen Monkey

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Mon, 02 Jan 2017 00:00:00 +0900</pubDate>
        <link>http://android.kmshack.kr/2017/01/02/text_decorator/</link>
        <guid isPermaLink="true">http://android.kmshack.kr/2017/01/02/text_decorator/</guid>
        
        <category>text</category>
        
        <category>decorator</category>
        
        
      </item>
    
      <item>
        <title>Snowfall</title>
        <description>&lt;h1 id=&quot;android-snowfall&quot;&gt;Android-Snowfall&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://android-arsenal.com/details/1/4952&quot;&gt;[Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-Android–Snowfall-brightgreen.svg?style=flat)&lt;/a&gt;
&lt;a href=&quot;https://jitpack.io/#jetradarmobile/android-snowfall&quot;&gt;[Release](https://jitpack.io/v/jetradarmobile/android-snowfall.svg)&lt;/a&gt;
&lt;a href=&quot;https://android-arsenal.com/api?level=16&quot;&gt;[API](https://img.shields.io/badge/API-16%2B-brightgreen.svg?style=flat)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fully customizable implementation of “Snowfall View” on Android.&lt;/p&gt;

&lt;p&gt;That’s how we use it in our app “Hotellook”&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/JetradarMobile/android-snowfall/master/art/hotellook-demo.gif&quot;&gt;image&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;compatibility&quot;&gt;Compatibility&lt;/h2&gt;

&lt;p&gt;This library is compatible from API 16 (Android 4.1).&lt;/p&gt;

&lt;h2 id=&quot;download&quot;&gt;Download&lt;/h2&gt;

&lt;p&gt;Add it in your root build.gradle at the end of repositories:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;allprojects&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;repositories&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;maven&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://jitpack.io&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Add the dependency&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;com.github.jetradarmobile:android-snowfall:1.1.6&#39;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;

&lt;p&gt;Default implementation with round snowflakes:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;com.jetradarmobile.snowfall.SnowfallView&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Fully customized implementation:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;com.jetradarmobile.snowfall.SnowfallView&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;app:snowflakesNum=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;250&quot;&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;app:snowflakeAlphaMin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;150&quot;&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;app:snowflakeAlphaMax=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;255&quot;&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;app:snowflakeAngleMax=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;5&quot;&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;app:snowflakeSizeMin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;8dp&quot;&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;app:snowflakeSizeMax=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;32dp&quot;&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;app:snowflakeSpeedMin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;4&quot;&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;app:snowflakeSpeedMax=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;12&quot;&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;app:snowflakesFadingEnabled=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;app:snowflakesAlreadyFalling=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;app:snowflakeImage=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@drawable/snowflake&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;license&quot;&gt;License&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Copyright 2016 JetRadar

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Mon, 02 Jan 2017 00:00:00 +0900</pubDate>
        <link>http://android.kmshack.kr/2017/01/02/snowfall/</link>
        <guid isPermaLink="true">http://android.kmshack.kr/2017/01/02/snowfall/</guid>
        
        <category>snow</category>
        
        
      </item>
    
      <item>
        <title>material about</title>
        <description>&lt;p&gt;#material-about-library&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://jitpack.io/#daniel-stoneuk/material-about-library&quot;&gt;[Release][101]&lt;/a&gt;
&lt;a href=&quot;https://www.apache.org/licenses/LICENSE-2.0.html&quot;&gt;[Apache License 2.0][103]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If there are any icon designers out there that are willing to design a free icon for this libraries’ demo app, please contact me&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Makes it easy to create a beautiful about screen for your app.&lt;/p&gt;

&lt;p&gt;Idea from here: &lt;a href=&quot;https://github.com/HeinrichReimer/open-source-library-request-manager/issues/3&quot;&gt;Heinrich Reimer’s open-source-library-request-manager&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Design inspired by Phonograph.&lt;/p&gt;

&lt;h2 id=&quot;demo&quot;&gt;Demo&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.danielstone.materialaboutlibrarydemo&amp;amp;pcampaignid=MKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1&quot;&gt;&lt;img alt=&quot;Get it on Google Play&quot; src=&quot;https://play.google.com/intl/en_gb/badges/images/generic/en_badge_web_generic.png&quot; height=&quot;60&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;screenshots&quot;&gt;Screenshots&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Demo App&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Example&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;a href=&quot;http://i.imgur.com/2d63NFS.png&quot;&gt;Demo App&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;a href=&quot;http://i.imgur.com/1k4rcN7.png&quot;&gt;Monitor&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;a href=&quot;https://github.com/daniel-stoneuk/material-about-library/blob/master/app/src/main/java/com/danielstone/materialaboutlibrarydemo/ExampleMaterialAboutActivity.java&quot;&gt;&lt;em&gt;ExampleMaterialAboutActivity.java&lt;/em&gt;&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.danielstone.energyhive&quot;&gt;&lt;em&gt;Monitor&lt;/em&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;features&quot;&gt;Features&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Material design&lt;/li&gt;
  &lt;li&gt;Modular backend&lt;/li&gt;
  &lt;li&gt;Easy to implement&lt;/li&gt;
  &lt;li&gt;Simple but intuitive API&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;dependency&quot;&gt;Dependency&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;material-about-library&lt;/em&gt; is available on &lt;a href=&quot;https://jitpack.io&quot;&gt;&lt;strong&gt;jitpack.io&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Gradle dependency:&lt;/strong&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;gradle
allprojects {
    repositories {
        maven { url &#39;https://jitpack.io&#39; }
    }
}
&lt;/code&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;gradle
dependencies {
    compile &#39;com.github.daniel-stoneuk:material-about-library:1.1.1&#39;
}
&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Your &lt;code class=&quot;highlighter-rouge&quot;&gt;Activity&lt;/code&gt; must extend &lt;a href=&quot;https://github.com/daniel-stoneuk/material-about-library/blob/master/library/src/main/java/com/danielstone/materialaboutlibrary/MaterialAboutActivity.java&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;MaterialAboutActivity&lt;/code&gt;&lt;/a&gt; and be in your &lt;em&gt;AndroidManifest.java&lt;/em&gt;:
```java
public class ExampleMaterialAboutActivity extends MaterialAboutActivity {&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@Override
protected MaterialAboutList getMaterialAboutList() {
    return new MaterialAboutList.Builder()
            .build();
}

@Override
protected CharSequence getActivityTitle() {
    return getString(R.string.mal_title_about);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;}
&lt;code class=&quot;highlighter-rouge&quot;&gt;
Ensure that the theme extends &#39;Theme.Mal&#39;, and apply primary &amp;amp; accent colours.
&lt;/code&gt;xml
&amp;lt;manifest …&amp;gt;
    &amp;lt;application …&amp;gt;
        &lt;activity android:name=&quot;.ExampleMaterialAboutActivity&quot; android:theme=&quot;@style/AppTheme.MaterialAboutActivity&quot;&gt;&lt;/activity&gt;
    &amp;lt;/application&amp;gt;
&amp;lt;/manifest&amp;gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;
&lt;/code&gt;xml
    &lt;style name=&quot;AppTheme.MaterialAboutActivity&quot; parent=&quot;Theme.Mal&quot;&gt;
        &amp;lt;-- Customize your theme here. --&amp;gt;
        &lt;item name=&quot;colorPrimary&quot;&gt;@color/colorPrimary&lt;/item&gt;
        &lt;item name=&quot;colorPrimaryDark&quot;&gt;@color/colorPrimaryDark&lt;/item&gt;
        &lt;item name=&quot;colorAccent&quot;&gt;@color/colorAccent&lt;/item&gt;
    &lt;/style&gt;
```&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Add Cards:&lt;/p&gt;

&lt;p&gt;Start building a “card” using &lt;a href=&quot;https://github.com/daniel-stoneuk/material-about-library/blob/ce35cdc99d33af1faf40c7a1cddf2889898be4e7/library/src/main/java/com/danielstone/materialaboutlibrary/model/MaterialAboutCard.java&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;MaterialAboutCard.Builder()&lt;/code&gt;&lt;/a&gt;
```java
public class ExampleMaterialAboutActivity extends MaterialAboutActivity {&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@Override
protected MaterialAboutList getMaterialAboutList() {
    MaterialAboutCard.Builder appCardBuilder = new MaterialAboutCard.Builder(); ``` Give the card a title by calling `.title` on the `Builder` ```java
    authorCardBuilder.title(&quot;Author&quot;); ```
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; Add Items:&lt;/p&gt;

&lt;p&gt;There are currently two types of item you can add to a card - &lt;a href=&quot;https://github.com/daniel-stoneuk/material-about-library/blob/ce35cdc99d33af1faf40c7a1cddf2889898be4e7/library/src/main/java/com/danielstone/materialaboutlibrary/model/MaterialAboutTitleItem.java&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;MaterialAboutTitleItem&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/daniel-stoneuk/material-about-library/blob/ce35cdc99d33af1faf40c7a1cddf2889898be4e7/library/src/main/java/com/danielstone/materialaboutlibrary/model/MaterialAboutActionItem.java&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;MaterialAboutActionItem&lt;/code&gt;&lt;/a&gt;. Planned items include “person” items which feature buttons to showcase a single person. Feel free to submit a PR or Issue for more item ideas.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;MaterialAboutActionItem&lt;/code&gt;: Standard item with text, icon and optional subtext.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;MaterialAboutTitleItem&lt;/code&gt;: Larger item with large icon (eg app icon) and larger text.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/daniel-stoneuk/material-about-library/blob/ce35cdc99d33af1faf40c7a1cddf2889898be4e7/library/src/main/java/com/danielstone/materialaboutlibrary/model/MaterialAboutTitleItem.java&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;MaterialAboutTitleItem&lt;/code&gt;&lt;/a&gt; is created with &lt;a href=&quot;https://github.com/daniel-stoneuk/material-about-library/blob/ce35cdc99d33af1faf40c7a1cddf2889898be4e7/library/src/main/java/com/danielstone/materialaboutlibrary/model/MaterialAboutTitleItem.java&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;MaterialAboutTitleItem.Builder()&lt;/code&gt;&lt;/a&gt; and lets you specify &lt;strong&gt;text&lt;/strong&gt; and an &lt;strong&gt;icon&lt;/strong&gt;.
&lt;code class=&quot;highlighter-rouge&quot;&gt;java
        appCardBuilder.addItem(new MaterialAboutTitleItem.Builder()
                .text(&quot;Material About Library&quot;)
                .icon(R.mipmap.ic_launcher)
                .build());
&lt;/code&gt;
&lt;a href=&quot;https://github.com/daniel-stoneuk/material-about-library/blob/ce35cdc99d33af1faf40c7a1cddf2889898be4e7/library/src/main/java/com/danielstone/materialaboutlibrary/model/MaterialAboutActionItem.java&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;MaterialAboutActionItem&lt;/code&gt;&lt;/a&gt; is created with &lt;a href=&quot;https://github.com/daniel-stoneuk/material-about-library/blob/ce35cdc99d33af1faf40c7a1cddf2889898be4e7/library/src/main/java/com/danielstone/materialaboutlibrary/model/MaterialAboutActionItem.java&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;MaterialAboutActionItem.Builder()&lt;/code&gt;&lt;/a&gt; and lets you specify &lt;strong&gt;text&lt;/strong&gt;, &lt;strong&gt;sub-text&lt;/strong&gt;, an &lt;strong&gt;icon&lt;/strong&gt; and an &lt;strong&gt;OnClickListener&lt;/strong&gt;.
&lt;code class=&quot;highlighter-rouge&quot;&gt;java
        appCardBuilder.addItem(new MaterialAboutActionItem.Builder()
                .text(&quot;Version&quot;)
                .subText(&quot;1.0.0&quot;)
                .icon(R.drawable.ic_about_info)
                .setOnClickListener(new MaterialAboutActionItem.OnClickListener() {
                    @Override
                    public void onClick() {
                        Toast.makeText(ExampleMaterialAboutActivity.this, &quot;Version Tapped&quot;, Toast.LENGTH_SHORT).show();
                    }
                })
                .build());
&lt;/code&gt;
&lt;strong&gt;Step 4:&lt;/strong&gt; Return the list:
Create a &lt;a href=&quot;https://github.com/daniel-stoneuk/material-about-library/blob/ce35cdc99d33af1faf40c7a1cddf2889898be4e7/library/src/main/java/com/danielstone/materialaboutlibrary/model/MaterialAboutList.java&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;MaterialAboutList&lt;/code&gt;&lt;/a&gt; using &lt;a href=&quot;https://github.com/daniel-stoneuk/material-about-library/blob/ce35cdc99d33af1faf40c7a1cddf2889898be4e7/library/src/main/java/com/danielstone/materialaboutlibrary/model/MaterialAboutList.java&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;MaterialAboutList.Builder()&lt;/code&gt;&lt;/a&gt;, passing in the cards you would like to display.
&lt;code class=&quot;highlighter-rouge&quot;&gt;java
        return new MaterialAboutList.Builder()
                .addCard(supportCardBuilder.build())
                .build();
    }
}
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Check out a working example in &lt;a href=&quot;https://github.com/daniel-stoneuk/material-about-library/blob/master/app/src/main/java/com/danielstone/materialaboutlibrarydemo/ExampleMaterialAboutActivity.java&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ExampleMaterialAboutActivity.java&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; You can either use &lt;em&gt;Strings&lt;/em&gt; / &lt;em&gt;Drawables&lt;/em&gt; or &lt;em&gt;Resources&lt;/em&gt; when creating &lt;code class=&quot;highlighter-rouge&quot;&gt;MaterialAboutItem&lt;/code&gt;’s&lt;/p&gt;

&lt;h2 id=&quot;license&quot;&gt;License&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Copyright 2016 Daniel Stone

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Mon, 02 Jan 2017 00:00:00 +0900</pubDate>
        <link>http://android.kmshack.kr/2017/01/02/material_about/</link>
        <guid isPermaLink="true">http://android.kmshack.kr/2017/01/02/material_about/</guid>
        
        <category>material</category>
        
        <category>about</category>
        
        
      </item>
    
      <item>
        <title>Android ExpandIcon</title>
        <description>&lt;h1 id=&quot;android-expandicon&quot;&gt;Android-ExpandIcon&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://jitpack.io/#zagum/Android-ExpandIcon&quot;&gt;[Release](https://jitpack.io/v/zagum/Android-ExpandIcon.svg)&lt;/a&gt;
&lt;a href=&quot;https://android-arsenal.com/api?level=15&quot;&gt;[API](https://img.shields.io/badge/API-15%2B-blue.svg?style=flat)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nice and simple customizable implementation of Google style up/down arrow.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zagum/Android-ExpandIcon/blob/master/art/expand_icon_demo.gif&quot;&gt;image&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another nice example of using this library: https://github.com/hearsilent/PixelSlide&lt;/p&gt;

&lt;h2 id=&quot;compatibility&quot;&gt;Compatibility&lt;/h2&gt;

&lt;p&gt;This library is compatible from API 15 (Android 4.0.3).&lt;/p&gt;

&lt;h2 id=&quot;download&quot;&gt;Download&lt;/h2&gt;

&lt;p&gt;Add it in your root build.gradle at the end of repositories:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;allprojects&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;repositories&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;maven&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://jitpack.io&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Add the dependency&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;com.github.zagum:Android-ExpandIcon:1.1.1&#39;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;

&lt;p&gt;Default implementation:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;com.github.zagum.expandicon.ExpandIconView&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;24dp&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;24dp&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Fully customized implementation:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;com.github.zagum.expandicon.ExpandIconView&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;48dp&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;48dp&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_gravity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;center_horizontal&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_marginTop=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;56dp&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app:eiv_animationDuration=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;300&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app:eiv_color=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#000&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app:eiv_colorLess=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#f00&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app:eiv_colorMore=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#00f&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app:eiv_roundedCorners=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app:eiv_switchColor=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app:eiv_padding=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;8dp&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Public methods:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;n&quot;&gt;expandIconView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;switchState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;expandIconView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ExpandIconView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LESS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;expandIconView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setFraction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;See sample project for more information&lt;/p&gt;

&lt;h2 id=&quot;license&quot;&gt;License&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Copyright 2016 Evgenii Zagumennyi

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Mon, 02 Jan 2017 00:00:00 +0900</pubDate>
        <link>http://android.kmshack.kr/2017/01/02/AndroidExpandIcon/</link>
        <guid isPermaLink="true">http://android.kmshack.kr/2017/01/02/AndroidExpandIcon/</guid>
        
        <category>icon</category>
        
        
      </item>
    
      <item>
        <title>stencil</title>
        <description>&lt;h2 id=&quot;stencil&quot;&gt;stencil&lt;/h2&gt;
&lt;p&gt;Android library, written exclusively in &lt;a href=&quot;https://kotlinlang.org/&quot;&gt;Kotlin&lt;/a&gt;, for animating the path created from text&lt;/p&gt;

&lt;p&gt;&amp;lt;img src=”https://images.thoughtbot.com/blog-vellum-image-uploads/jZpvwqUR8muyhDIT5SSu_stencil.gif” width=300/&amp;gt;&lt;/p&gt;

&lt;h2 id=&quot;download&quot;&gt;Download&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Step 1. Add the JitPack repository to your root &lt;code class=&quot;highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt; file&lt;/strong&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;groovy
allprojects {
  repositories {
    ...
    maven { url &#39;https://jitpack.io&#39; }
  }
}
&lt;/code&gt;
&lt;strong&gt;Step 2. Add the dependency to your app’s &lt;code class=&quot;highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt; file&lt;/strong&gt;
```groovy&lt;/p&gt;

&lt;p&gt;dependencies {
  compile ‘com.github.thoughtbot:stencil:1.0’
}
```&lt;/p&gt;

&lt;h2 id=&quot;contributing&quot;&gt;Contributing&lt;/h2&gt;

&lt;p&gt;See the &lt;a href=&quot;CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt; document. Thank you, &lt;a href=&quot;https://github.com/thoughtbot/stencil/graphs/contributors&quot;&gt;contributors&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;license&quot;&gt;License&lt;/h2&gt;

&lt;p&gt;stencil is Copyright (c) 2016 thoughtbot, inc. It is free software, and may be redistributed under the terms specified in the &lt;a href=&quot;/LICENSE&quot;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt;

&lt;h2 id=&quot;about&quot;&gt;About&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://thoughtbot.com/logo.png&quot;&gt;thoughtbot&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;stencil is maintained and funded by thoughtbot, inc. The names and logos for thoughtbot are trademarks of thoughtbot, inc.&lt;/p&gt;

&lt;p&gt;We love open source software See &lt;a href=&quot;https://thoughtbot.com/tools?utm_source=github&quot;&gt;our other projects&lt;/a&gt; or &lt;a href=&quot;https://thoughtbot.com/hire-us?utm_source=github&quot;&gt;hire us&lt;/a&gt; to help build your product.&lt;/p&gt;

</description>
        <pubDate>Thu, 22 Dec 2016 00:00:00 +0900</pubDate>
        <link>http://android.kmshack.kr/2016/12/22/stencil/</link>
        <guid isPermaLink="true">http://android.kmshack.kr/2016/12/22/stencil/</guid>
        
        <category>stencil</category>
        
        
      </item>
    
      <item>
        <title>FolioReader</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/FolioReader/FolioReaderKit/assets/folioreader.png&quot;&gt;FolioReader logo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/FolioReader/FolioReader-Android&quot;&gt;[Build Status](https://api.travis-ci.org/FolioReader/FolioReader-Android.svg?branch=master)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;FolioReader-Android is an ePub reader and parser framework written in Java.&lt;/p&gt;

&lt;h3 id=&quot;features&quot;&gt;Features&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;[x] Custom Fonts&lt;/li&gt;
  &lt;li&gt;[x] Custom Text Size&lt;/li&gt;
  &lt;li&gt;[x] Themes / Day mode / Night mode&lt;/li&gt;
  &lt;li&gt;[x] Text Highlighting&lt;/li&gt;
  &lt;li&gt;[x] List / Edit / Delete Highlights&lt;/li&gt;
  &lt;li&gt;[x] Handle Internal and External Links&lt;/li&gt;
  &lt;li&gt;[x] Portrait / Landscape&lt;/li&gt;
  &lt;li&gt;[x] Reading Time Left / Pages left&lt;/li&gt;
  &lt;li&gt;[ ] In-App Dictionary&lt;/li&gt;
  &lt;li&gt;[x] Media Overlays (Sync text rendering with audio playback)&lt;/li&gt;
  &lt;li&gt;[x] TTS - Text to Speech Support&lt;/li&gt;
  &lt;li&gt;[ ] Parse epub cover image&lt;/li&gt;
  &lt;li&gt;[ ] PDF support&lt;/li&gt;
  &lt;li&gt;[ ] Book Search&lt;/li&gt;
  &lt;li&gt;[x] Add Notes to a Highlight&lt;/li&gt;
  &lt;li&gt;[ ] Better Documentation&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;demo&quot;&gt;Demo&lt;/h2&gt;
&lt;p&gt;##### Custom Fonts
&lt;a href=&quot;https://cloud.githubusercontent.com/assets/1277242/19012915/0661c7b2-87e0-11e6-81d6-8c71051e1074.gif&quot;&gt;Custom fonts&lt;/a&gt;
##### Day and Night Mode
&lt;a href=&quot;https://cloud.githubusercontent.com/assets/1277242/19012914/f42059c4-87df-11e6-97f8-29e61a79e8aa.gif&quot;&gt;Day night mode&lt;/a&gt;
##### Text Highlighting 
&lt;a href=&quot;https://cloud.githubusercontent.com/assets/1277242/19012904/c2700c3a-87df-11e6-97ed-507765b3ddf0.gif&quot;&gt;Highlight&lt;/a&gt;
##### Media Overlays 
&lt;a href=&quot;https://cloud.githubusercontent.com/assets/1277242/19012908/d61f3ce2-87df-11e6-8652-d72b6a1ad9a3.gif&quot;&gt;Media Overlay&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;gradle&quot;&gt;Gradle&lt;/h3&gt;
&lt;p&gt;Add following dependency to your app build.gradle
&lt;code class=&quot;highlighter-rouge&quot;&gt;java
compile &#39;com.folioreader:folioreader:0.2.5&#39;
&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;usage&quot;&gt;Usage&lt;/h3&gt;

&lt;p&gt;To use FolioReader, you need to call FolioReaderActivity with following parameters:
1. INTENT_EPUB_SOURCE_TYPE - your epub can come from raw or assets folder or from SD card. Use enum FolioActivity.EpubSourceType.
2. INTENT_EPUB_SOURCE_PATH - assets/SD card path of the epub file or raw ID of epub file if epub file is in raw folder&lt;/p&gt;

&lt;p&gt;Reading from assets folder
&lt;code class=&quot;highlighter-rouge&quot;&gt;java
Intent intent = new Intent(HomeActivity.this, FolioActivity.class);
intent.putExtra(FolioActivity.INTENT_EPUB_SOURCE_TYPE, FolioActivity.EpubSourceType.ASSESTS);
intent.putExtra(FolioActivity.INTENT_EPUB_SOURCE_PATH, &quot;epub/The Silver Chair.epub&quot;);
startActivity(intent);
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Reading from raw folder of resources
&lt;code class=&quot;highlighter-rouge&quot;&gt;java
Intent intent = new Intent(HomeActivity.this, FolioActivity.class);
intent.putExtra(FolioActivity.INTENT_EPUB_SOURCE_TYPE, FolioActivity.EpubSourceType.RAW);
intent.putExtra(FolioActivity.INTENT_EPUB_SOURCE_PATH, R.raw.adventures);
startActivity(intent);
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;For reading from SD card, just retrieve absolute path of epub file and pass that in INTENT_EPUB_SOURCE_PATH.&lt;/p&gt;

&lt;h3 id=&quot;credits&quot;&gt;Credits&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/daimajia/AndroidSwipeLayout&quot;&gt;SwipeLayout&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ormlite.com/&quot;&gt;ORMLite&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/julianharty/new-android-daisy-reader&quot;&gt;SMIL parsing&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;author&quot;&gt;Author&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/hebertialmeida&quot;&gt;&lt;strong&gt;Heberti Almeida&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Follow me on &lt;strong&gt;Twitter&lt;/strong&gt;: &lt;a href=&quot;https://twitter.com/hebertialmeida&quot;&gt;&lt;strong&gt;@hebertialmeida&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Contact me on &lt;strong&gt;LinkedIn&lt;/strong&gt;: &lt;a href=&quot;http://linkedin.com/in/hebertialmeida&quot;&gt;&lt;strong&gt;hebertialmeida&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mahavir155&quot;&gt;&lt;strong&gt;Mahavir Jain&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Follow me on &lt;strong&gt;Twitter&lt;/strong&gt;: &lt;a href=&quot;https://twitter.com/mahavir155&quot;&gt;&lt;strong&gt;@mahavir155&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Contact me on &lt;strong&gt;LinkedIn&lt;/strong&gt;: &lt;a href=&quot;http://linkedin.com/in/mahavir155&quot;&gt;&lt;strong&gt;mahavir155&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;donations&quot;&gt;Donations&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;This project needs you&lt;/strong&gt; If you would like to support this project’s further development, the creator of this project or the continuous maintenance of this project, &lt;strong&gt;feel free to donate&lt;/strong&gt;. Your donation is highly appreciated. Thank you&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PayPal&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;[&lt;strong&gt;Donate 5 $&lt;/strong&gt;] (https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;amp;business=hebertialmeida%40gmail%2ecom&amp;amp;lc=US&amp;amp;item_name=FolioReader%20Libraries&amp;amp;amount=5%2e00&amp;amp;currency_code=USD&amp;amp;bn=PP%2dDonationsBF%3abtn_donate_SM%2egif%3aNonHosted): Thank’s for creating this project, here’s a tea (or some juice) for you&lt;/li&gt;
  &lt;li&gt;[&lt;strong&gt;Donate 10 $&lt;/strong&gt;] (https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;amp;business=hebertialmeida%40gmail%2ecom&amp;amp;lc=US&amp;amp;item_name=FolioReader%20Libraries&amp;amp;amount=10%2e00&amp;amp;currency_code=USD&amp;amp;bn=PP%2dDonationsBF%3abtn_donate_SM%2egif%3aNonHosted): Wow, I am stunned. Let me take you to the movies&lt;/li&gt;
  &lt;li&gt;[&lt;strong&gt;Donate 15 $&lt;/strong&gt;] (https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;amp;business=hebertialmeida%40gmail%2ecom&amp;amp;lc=US&amp;amp;item_name=FolioReader%20Libraries&amp;amp;amount=15%2e00&amp;amp;currency_code=USD&amp;amp;bn=PP%2dDonationsBF%3abtn_donate_SM%2egif%3aNonHosted): I really appreciate your work, let’s grab some lunch&lt;/li&gt;
  &lt;li&gt;[&lt;strong&gt;Donate 25 $&lt;/strong&gt;] (https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;amp;business=hebertialmeida%40gmail%2ecom&amp;amp;lc=US&amp;amp;item_name=FolioReader%20Libraries&amp;amp;amount=25%2e00&amp;amp;currency_code=USD&amp;amp;bn=PP%2dDonationsBF%3abtn_donate_SM%2egif%3aNonHosted): That’s some awesome stuff you did right there, dinner is on me&lt;/li&gt;
  &lt;li&gt;[&lt;strong&gt;Donate 50 $&lt;/strong&gt;] (https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;amp;business=hebertialmeida%40gmail%2ecom&amp;amp;lc=US&amp;amp;item_name=FolioReader%20Libraries&amp;amp;amount=50%2e00&amp;amp;currency_code=USD&amp;amp;bn=PP%2dDonationsBF%3abtn_donate_SM%2egif%3aNonHosted): I really really want to support this project, great job&lt;/li&gt;
  &lt;li&gt;[&lt;strong&gt;Donate 100 $&lt;/strong&gt;] (https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;amp;business=hebertialmeida%40gmail%2ecom&amp;amp;lc=US&amp;amp;item_name=FolioReader%20Libraries&amp;amp;amount=100%2e00&amp;amp;currency_code=USD&amp;amp;bn=PP%2dDonationsBF%3abtn_donate_SM%2egif%3aNonHosted): You are the man This project saved me hours (if not days) of struggle and hard work, simply awesome&lt;/li&gt;
  &lt;li&gt;Of course, you can also &lt;a href=&quot;https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;amp;business=hebertialmeida%40gmail%2ecom&amp;amp;lc=US&amp;amp;item_name=FolioReader%20Libraries&amp;amp;currency_code=USD&amp;amp;bn=PP%2dDonationsBF%3abtn_donate_SM%2egif%3aNonHosted&quot;&gt;&lt;strong&gt;choose what you want to donate&lt;/strong&gt;&lt;/a&gt;, all donations are awesome&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;license&quot;&gt;License&lt;/h2&gt;
&lt;p&gt;FolioReaderKit is available under the BSD license. See the &lt;a href=&quot;https://github.com/FolioReader/FolioReader-Android/blob/master/License.md&quot;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt;

</description>
        <pubDate>Thu, 22 Dec 2016 00:00:00 +0900</pubDate>
        <link>http://android.kmshack.kr/2016/12/22/FolioReader/</link>
        <guid isPermaLink="true">http://android.kmshack.kr/2016/12/22/FolioReader/</guid>
        
        <category>reader</category>
        
        <category>view</category>
        
        
      </item>
    
      <item>
        <title>LongPressPopup</title>
        <description>&lt;h1 id=&quot;longpresspopup&quot;&gt;LongPressPopup&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;sample.gif&quot; title=&quot;sample&quot; /&gt;
&lt;br /&gt;
You can try the demo app on google play store. &lt;br /&gt;
https://play.google.com/store/apps/details?id=rm.com.longpresspopupsample &lt;br /&gt; &lt;br /&gt;
Or see the full video demo on YouTube. &lt;br /&gt;
https://youtu.be/oSETieldmyw &lt;br /&gt; &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;A library that let you implement a behaviour similar to the Instagram’s &lt;br /&gt;
long press to show detail one, with the option to put every kind of views inside it, &lt;br /&gt;
(even web views, lists, pagers and so on) show tooltips on drag over &lt;br /&gt;
and handle the release of the finger over Views &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;[Changelog] (CHANGELOG.md)&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;download&quot;&gt;Download&lt;/h2&gt;
&lt;p&gt;####Gradle:
&lt;code class=&quot;highlighter-rouge&quot;&gt;groovy
compile &#39;com.rm:longpresspopup:1.0.0&#39;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;b&gt;Min SDK version: 10 (Android 2.3.3) &lt;/b&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;##Usage&lt;/p&gt;

&lt;p&gt;####Basic
Here’s a basic example &lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ActivityMain&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AppCompatActivity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;setContentView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;activity_main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            
            &lt;span class=&quot;n&quot;&gt;Button&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;btn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;findViewById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;btn_popup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            
            &lt;span class=&quot;c1&quot;&gt;// Create a foo TextView&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;TextView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;textView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TextView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;textView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello, Foo&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            
            &lt;span class=&quot;n&quot;&gt;LongPressPopup&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;popup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LongPressPopupBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// A Context object for the builder constructor&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTarget&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;btn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// The View which will open the popup if long pressed&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setPopupView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;textView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// The View to show when long pressed &lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// This will give you a LongPressPopup object&lt;/span&gt;
                    
            &lt;span class=&quot;c1&quot;&gt;// You can also chain it to the .build() mehod call above without declaring the &quot;popup&quot; variable before &lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;popup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// From this moment, the touch events are registered and, if long pressed, will show the given view inside the popup, call unregister() to stop&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;sample_short.gif&quot; title=&quot;sample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;####Advanced
Here’s a complete example with all the options &lt;br /&gt;
```java
public class ActivityMain extends AppCompatActivity implements PopupInflaterListener,
            PopupStateListener, PopupOnHoverListener, View.OnClickListener {&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;private static final String TAG = ActivityMain.class.getSimpleName();
 
private TextView mTxtPopup;   
    
@Override
public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    
    Button btn = (Button) findViewById(R.id.btn_popup);
    
    LongPressPopup popup = new LongPressPopupBuilder(this)
                    .setTarget(btn)
                    //.setPopupView(textView)// Not using this time
                    .setPopupView(R.layout.popup_layout, this)
                    .setLongPressDuration(750)
                    .setDismissOnLongPressStop(false)
                    .setDismissOnTouchOutside(false)
                    .setDismissOnBackPressed(false)
                    .setCancelTouchOnDragOutsideView(true)
                    .setLongPressReleaseListener(this)
                    .setOnHoverListener(this)
                    .setPopupListener(this)
                    .setTag(&quot;PopupFoo&quot;)
                    .setAnimationType(LongPressPopup.ANIMATION_TYPE_FROM_CENTER)
                    .build();
            
    // You can also chain it to the .build() mehod call above without declaring the &quot;popup&quot; variable before 
    popup.register();
}


// Popup inflater listener
@Override
public void onViewInflated(@Nullable String popupTag, View root) {
    mTxtPopup = (TextView) root.findViewById(R.id.txt_popup);
}


// Touch released on a View listener
@Override
public void onClick(View view) {
    if (mTxtPopup = null &amp;amp;&amp;amp; view.getId() == mTxtPopup.getId()) {
        Toast.makeText(ActivityMain.this, &quot;TextView Clicked&quot;, Toast.LENGTH_SHORT).show();
    }
}


// PopupStateListener
@Override
public void onPopupShow(@Nullable String popupTag) {
    if(mTxtPopup = null) {
        mTxtPopup.setText(&quot;FooBar&quot;);
    }
}

@Override
public void onPopupDismiss(@Nullable String popupTag) {
    Toast.makeText(this, &quot;Popup dismissed&quot;, Toast.LENGTH_SHORT).show();
}


// Hover state listener
@Override
public void onHoverChanged(View view, boolean isHovered) {
    Log.e(TAG, &quot;Hover change: &quot; + isHovered + &quot; on View &quot; + view.getClass().getSimpleName());
} } ``` &amp;lt;br /&amp;gt; &amp;lt;br /&amp;gt; And here are the functions you can use to customize the Popup and it&#39;s behaviour from the LongPressPopupBuilder class: &amp;lt;br /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;public LongPressPopupBuilder setTarget(View target)&lt;/code&gt; &lt;b&gt;(null by default) &lt;/b&gt; &lt;br /&gt;
  Select which view will show the popup view if long pressed &lt;br /&gt; &lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;public LongPressPopupBuilder setPopupView(View popupView)&lt;/code&gt; &lt;b&gt;(null by default)&lt;/b&gt; &lt;br /&gt;
  Select the view that will be shown inside the popup &lt;br /&gt; &lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;public LongPressPopupBuilder setPopupView(@LayoutRes int popupViewRes, PopupInflaterListener inflaterListener)&lt;/code&gt; &lt;b&gt;(0, null by default)&lt;/b&gt; &lt;br /&gt;
  Select the view that will be shown inside the popup, and give the popup that will be &lt;br /&gt;
  called when the view is inflated (not necessarily when shown, so not load images and so on in this callback, &lt;br /&gt;
  just take the views like in the OnCreate method of an Activity) &lt;br /&gt; &lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;public LongPressPopupBuilder setLongPressDuration(@IntRange(from = 1) int duration)&lt;/code&gt; &lt;b&gt;(500 by default)&lt;/b&gt; &lt;br /&gt;
  Pretty self explanatory right? **Captain here, the long press time needed to show the popup &lt;br /&gt; &lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;public LongPressPopupBuilder setDismissOnLongPressStop(boolean dismissOnPressStop)&lt;/code&gt; &lt;b&gt;(true by default)&lt;/b&gt; &lt;br /&gt;
  Set if the popup will be dismissed when the user releases the finger (if released on a View inside &lt;br /&gt;
  the popup, the View’s or the given OnClickListener will be called) &lt;br /&gt; &lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;public LongPressPopupBuilder setDismissOnTouchOutside(boolean dismissOnTouchOutside)&lt;/code&gt; &lt;b&gt;(true by default)&lt;/b&gt; &lt;br /&gt;
  If &lt;code class=&quot;highlighter-rouge&quot;&gt;setDismissOnLongPressStop(boolean dismissOnPressStop)&lt;/code&gt; is set to false, you can choose to make &lt;br /&gt;
  the popup dismiss or not if the user touch outside it with this boolean &lt;br /&gt; &lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;public LongPressPopupBuilder setDismissOnBackPressed(boolean dismissOnBackPressed)&lt;/code&gt;  &lt;b&gt;(true by default)&lt;/b&gt; &lt;br /&gt;
  If &lt;code class=&quot;highlighter-rouge&quot;&gt;setDismissOnLongPressStop(boolean dismissOnPressStop)&lt;/code&gt; is set to false, you can choose to make &lt;br /&gt;
  the popup dismiss or not if the user press the back button &lt;br /&gt; &lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;public LongPressPopupBuilder setCancelTouchOnDragOutsideView(boolean cancelOnDragOutside)&lt;/code&gt; &lt;b&gt;(true by default)&lt;/b&gt; &lt;br /&gt;
  Set if the long press timer will stop or not if the user drag the finger outside the target View &lt;br /&gt;
  (If the target View is inside a scrolling parent, when scrolling vertically the long press timer &lt;br /&gt;
  will be automatically stopped &lt;br /&gt; &lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;public LongPressPopupBuilder setLongPressReleaseListener(View.OnClickListener listener)&lt;/code&gt; &lt;b&gt;(null by default)&lt;/b&gt; &lt;br /&gt;
  This is a standard OnClickListener, which will be called if the user release the finger on a view inside &lt;br /&gt;
  the popup, you can use this method or set a standard OnClickListener on the View you want, it will be called &lt;br /&gt;
  automatically for you &lt;br /&gt; &lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;public LongPressPopupBuilder setOnHoverListener(PopupOnHoverListener listener)&lt;/code&gt; &lt;b&gt;(null by default)&lt;/b&gt; &lt;br /&gt;
  This listener will be called every time the user keeps dragging it’s finger inside or outside the popup &lt;br /&gt;
  views, with a View reference and a boolean with the hover state &lt;br /&gt; &lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;public LongPressPopupBuilder setPopupListener(PopupStateListener popupListener)&lt;/code&gt; &lt;b&gt;(null by default)&lt;/b&gt; &lt;br /&gt;
  This listener will be called when the popup is shown or dismissed, use this listener to load images or compile text views and so on &lt;br /&gt; &lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;public LongPressPopupBuilder setTag(String tag)&lt;/code&gt; &lt;b&gt;(null by default)&lt;/b&gt; &lt;br /&gt;
  This method sets a tag on the LongPressPopup, the given tag will be returned in all the listeners. You can also set it in the build(String tag) &lt;br /&gt; 
  method &lt;br /&gt; &lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;public LongPressPopupBuilder setAnimationType(@LongPressPopup.AnimationType int animationType)&lt;/code&gt; &lt;b&gt;(none by default)&lt;/b&gt; &lt;br /&gt;
  This method set the opening and closing animation for the popup, can be none or from-to Bottom, Top, Right, Left, Center&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Also, the LongPressPopup class gives some utility methods, like &lt;br /&gt; 
* &lt;code class=&quot;highlighter-rouge&quot;&gt;public void register()&lt;/code&gt; &lt;br /&gt;
    Which means that the popup is listening for touch events on the given view to show itself &lt;br /&gt; &lt;br /&gt;
* &lt;code class=&quot;highlighter-rouge&quot;&gt;public void unregister()&lt;/code&gt; &lt;br /&gt;
    Which makes to popup stop listening for touch events and dismiss itself if open  &lt;br /&gt; &lt;br /&gt;
* &lt;code class=&quot;highlighter-rouge&quot;&gt;public void showNow()&lt;/code&gt; &lt;br /&gt;
    Which shows immediately the popup
* &lt;code class=&quot;highlighter-rouge&quot;&gt;public void dismissNow()&lt;/code&gt; &lt;br /&gt;
    Which dismiss immediately the popup if open&lt;/p&gt;

&lt;p&gt;&lt;br /&gt; &lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;license&quot;&gt;License&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Copyright 2016 Riccardo Moro.

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and 
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Mon, 21 Nov 2016 00:00:00 +0900</pubDate>
        <link>http://android.kmshack.kr/2016/11/21/LongPressPopup/</link>
        <guid isPermaLink="true">http://android.kmshack.kr/2016/11/21/LongPressPopup/</guid>
        
        <category>popup</category>
        
        <category>3dtouch</category>
        
        
      </item>
    
      <item>
        <title>Crescento</title>
        <description>&lt;h1 id=&quot;crescento&quot;&gt;Crescento&lt;/h1&gt;

&lt;p&gt;Android library that adds a curve at the below of image views and relative layouts. &lt;strong&gt;CrescentoImageView&lt;/strong&gt; and &lt;strong&gt;CrescentoContainer&lt;/strong&gt; are the image view and relative layout respectively. You can change the radius of curve with &lt;strong&gt;attribute:curvature&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://android-arsenal.com/api?level=11&quot;&gt;[API](https://img.shields.io/badge/API-9%2B-orange.svg?style=flat)&lt;/a&gt;
&lt;a href=&quot;https://android-arsenal.com/details/1/4684&quot;&gt;[Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-Crescento-green.svg?style=true)&lt;/a&gt;
&lt;a href=&quot;http://androidweekly.net/issues/issue-232&quot;&gt;[Android Weekly](https://img.shields.io/badge/Android%20Weekly-%23232-blue.svg)&lt;/a&gt;
&lt;a href=&quot;https://www.androiddevdigest.com/digest-119/&quot;&gt;[AndroidDev Digest](https://img.shields.io/badge/AndroidDev%20Digest-%23119-blue.svg)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/art/sample_image.jpg&quot;&gt;Sample Image 2&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Crescento&lt;/strong&gt; provides following advantages:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Curve Bottom&lt;/strong&gt;: It adds a curve bottom as stated above.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Tint&lt;/strong&gt;: It add tint on &lt;strong&gt;CrescentoImageView&lt;/strong&gt; by using &lt;strong&gt;attribute:tintColor&lt;/strong&gt;. It pick color automatically from the image if &lt;strong&gt;tintMode&lt;/strong&gt; is set to &lt;strong&gt;automatic&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Alpha&lt;/strong&gt;: Add transparency in tint by using &lt;strong&gt;attribute:tintAlpha&lt;/strong&gt;. Varies from 0 to 255.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Gradient&lt;/strong&gt; : Add gradient on the imageview.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/developer-shivam/crescento/blob/master/demo.apk&quot;&gt;Sample Apk&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;use-with-kenburnsview&quot;&gt;Use with &lt;strong&gt;&lt;a href=&quot;https://github.com/flavioarfaria/KenBurnsView&quot;&gt;KenBurnsView&lt;/a&gt;&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;/art/sample2.gif&quot;&gt;Sample Image 1&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;developer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;shivam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;CrescentoContainer&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/crescentoContainer&quot;&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout_width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout_height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;300dp&quot;&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;elevation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;20dp&quot;&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scaleType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;centerCrop&quot;&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;attribute:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;curvature&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;50dp&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flaviofaria&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;kenburnsview&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;KenBurnsView&lt;/span&gt;
            &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout_width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
            &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout_height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
            &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@drawable/wallpaper2&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;developer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;shivam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;CrescentoContainer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;donations&quot;&gt;Donations&lt;/h2&gt;

&lt;p&gt;This project needs you If you would like to support this project’s further development, the creator of this project or the continuous maintenance of this project, feel free to donate. Your donation is highly appreciated (and I love food, coffee and beer). Thank you&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PayPal&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.paypal.me/developerShivam/5&quot;&gt;Donate $5&lt;/a&gt;&lt;/strong&gt;: Thank’s for creating this project, here’s a coffee (or some beer) for you&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.paypal.me/developerShivam/10&quot;&gt;Donate $10&lt;/a&gt;&lt;/strong&gt;: Wow, I am stunned. Let me take you to the movies&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.paypal.me/developerShivam/15&quot;&gt;Donate $15&lt;/a&gt;&lt;/strong&gt;: I really appreciate your work, let’s grab some lunch&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.paypal.me/developerShivam/25&quot;&gt;Donate $25&lt;/a&gt;&lt;/strong&gt;: That’s some awesome stuff you did right there, dinner is on me&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.paypal.me/developerShivam/50&quot;&gt;Donate $50&lt;/a&gt;&lt;/strong&gt;: I really really want to support this project, great job&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.paypal.me/developerShivam/100&quot;&gt;Donate $100&lt;/a&gt;&lt;/strong&gt;: You are the man This project saved me hours (if not days) of struggle and hard work, simply awesome&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.paypal.me/developerShivam/2799&quot;&gt;Donate $2799&lt;/a&gt;&lt;/strong&gt;: Go buddy, buy Macbook Pro for yourself
Of course, you can also choose what you want to donate, all donations are awesome&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;demo&quot;&gt;Demo&lt;/h2&gt;

&lt;p&gt;Here is a very good example of how to use &lt;code class=&quot;highlighter-rouge&quot;&gt;Crescento&lt;/code&gt;. &lt;strong&gt;Zsolt Szilvai&lt;/strong&gt; has made a very good design and I’ve illustrated using crescento.&lt;/p&gt;

&lt;p&gt;https://material.uplabs.com/posts/cinema-application-interface&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/art/sample2.png&quot;&gt;Sample of Zsolt Szilvai’s design&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;gradle-integration&quot;&gt;Gradle Integration&lt;/h2&gt;

&lt;p&gt;If you are using gradle then add these lines in build.gradle file at project level.
&lt;code class=&quot;highlighter-rouge&quot;&gt;java
	allprojects {
        repositories {
            ...
            maven { url &quot;https://jitpack.io&quot; }
        }
    }
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Add below lines in build.gradle at app level.
&lt;code class=&quot;highlighter-rouge&quot;&gt;java
	compile &#39;com.github.developer-shivam:crescento:1.0.1&#39;
&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;basic-usage&quot;&gt;Basic Usage&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;For a working implementation, see &lt;code class=&quot;highlighter-rouge&quot;&gt;/app&lt;/code&gt; folder&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CrescentoImageView&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;developer.shivam.library.CrescentoImageView&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/crescentoImageView&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;300dp&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:elevation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;20dp&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:scaleType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;centerCrop&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;attribute:curvature=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;50dp&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;attribute:tintMode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;manual&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;attribute:tintColor=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#FFFFFF&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;attribute:tintAlpha=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;50&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;CrescentoContainer&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;developer.shivam.library.CrescentoContainer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/crescentoContainer&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;300dp&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:elevation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;20dp&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;attribute:curvature=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;50dp&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;--&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Your&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;here&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/developer.shivam.library.CrescentoContainer&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;attributes&quot;&gt;Attributes&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;curvature&lt;/strong&gt;: To change the size of curve.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;curvatureDirection&lt;/strong&gt; : To change the direction of curvature. Whether &lt;strong&gt;inward&lt;/strong&gt; or &lt;strong&gt;outward&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;tintColor&lt;/strong&gt;: To add tint on image view.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;tintMode&lt;/strong&gt;: To add tint &lt;strong&gt;manually&lt;/strong&gt; or &lt;strong&gt;automatically&lt;/strong&gt;. If &lt;strong&gt;automatically&lt;/strong&gt; it will pick color from image you have set.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;tintAlpha&lt;/strong&gt;: To set the amount of tint. 0 for 100% transparent and 255 for opaque.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;gradientDirection&lt;/strong&gt; : To set the direction of gradient. Supported direction are &lt;strong&gt;TOP_TO_BOTTOM&lt;/strong&gt;, &lt;strong&gt;BOTTOM_TO_TOP&lt;/strong&gt;, &lt;strong&gt;LEFT_TO_RIGHT&lt;/strong&gt; and &lt;strong&gt;RIGHT_TO_LEFT&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;gradientStartColor&lt;/strong&gt; : gradient start color.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;gradientEndColor&lt;/strong&gt; : gradient end color.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;question--contact-me--hire-me&quot;&gt;Question / Contact Me / Hire Me&lt;/h2&gt;
&lt;p&gt;Please feel free to ping me at &lt;strong&gt;dr.droid27@gmail.com&lt;/strong&gt;. Expected package would be &lt;strong&gt;12 lpa&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;license&quot;&gt;License&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;MIT License

Copyright (c) 2016 Shivam Satija

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the &quot;Software&quot;), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Mon, 21 Nov 2016 00:00:00 +0900</pubDate>
        <link>http://android.kmshack.kr/2016/11/21/Crescento/</link>
        <guid isPermaLink="true">http://android.kmshack.kr/2016/11/21/Crescento/</guid>
        
        <category>imageview</category>
        
        
      </item>
    
      <item>
        <title>RMSwitch</title>
        <description>&lt;h1 id=&quot;rmswitch&quot;&gt;RMSwitch&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;switch-sample.gif&quot; title=&quot;sample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A simple View that works like a switch, but with more customizations. &lt;br /&gt;
With the option to choose between two or three states. (from v1.1.0) &lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;#####** If you’re upgrading from a version &amp;lt; 1.2.0, check the changelog of the 1.2.0 version, there are breaking changes &lt;br /&gt;
[Changelog] (CHANGELOG.md)&lt;/p&gt;

&lt;h5 id=&quot;from-version-120-you-can-choose-between-three-switch-design-br-&quot;&gt;From version 1.2.0 you can choose between three switch design: &lt;br /&gt;&lt;/h5&gt;
&lt;p&gt;-“Slim” &lt;br /&gt;
-“Large” &lt;br /&gt;
-“Android” &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;switch_design_samples.png&quot; title=&quot;design_sample&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;download&quot;&gt;Download&lt;/h2&gt;
&lt;p&gt;####Gradle:
&lt;code class=&quot;highlighter-rouge&quot;&gt;groovy
compile &#39;com.rm:rmswitch:1.2.2&#39;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;b&gt;Min API level: 16 (Android 4.1) &lt;/b&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;

&lt;p&gt;To use them, just add this to your layout file&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;--&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Two&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;states&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;com.rm.rmswitch.RMSwitch&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/your_id&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
                
                &lt;span class=&quot;na&quot;&gt;app:checked=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;app:forceAspectRatio=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;app:enabled=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;app:switchDesign=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;android&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;app:switchBkgCheckedColor=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@color/green&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;app:switchBkgNotCheckedColor=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@color/red&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;app:switchToggleCheckedColor=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@color/green&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;app:switchToggleCheckedImage=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@drawable/happy&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;app:switchToggleNotCheckedColor=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@color/red&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;app:switchToggleNotCheckedImage=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@drawable/sad&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
                
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;--&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Three&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;states&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;                
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;com.rm.rmswitch.RMTristateSwitch&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/your_id2&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
                
                &lt;span class=&quot;na&quot;&gt;app:forceAspectRatio=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;app:state=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;left&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;app:enabled=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;app:switchDesign=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;large&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;app:switchBkgLeftColor=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@color/red&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;app:switchBkgMiddleColor=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@color/grey&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;app:switchBkgRightColor=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@color/green&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;app:switchToggleLeftColor=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@color/red&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;app:switchToggleLeftImage=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@drawable/sad&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;app:switchToggleMiddleColor=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@color/grey&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;app:switchToggleMiddleImage=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@drawable/neutral&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;app:switchToggleRightColor=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@color/green&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;app:switchToggleRightImage=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@drawable/happy&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;… if you need to use this View’s custom xml attributes (shown in a table below or in the example above) do not forget to add this to your root layout
&lt;code class=&quot;highlighter-rouge&quot;&gt;
xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To see how it looks in the preview screen of Android Studio, build your project first&lt;/p&gt;

&lt;p&gt;And this in your Activity
```java
public class MainActivity extends AppCompatActivity {
    RMSwitch mSwitch;
    RMTristateSwitch mTristateSwitch;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    
    mSwitch = (RMSwitch) findViewById(R.id.your_id);
    mTristateSwitch = (RMTristateSwitch) findViewById(R.id.your_id2);
    
    
    // Setup the switch
    mSwitch.setChecked(true);
    mSwitch.setEnabled(true);
    mSwitch.setForceAspectRatio(false);
    mSwitch.setSwitchBkgCheckedColor(Color.GREEN);
    mSwitch.setSwitchBkgNotCheckedColor(Color.RED);
    mSwitch.setSwitchToggleCheckedColor(Color.BLACK);
    mSwitch.setSwitchToggleNotCheckedColor(Color.BLACK);
    mSwitch.setSwitchDesign(RMTristateSwitch.DESIGN_ANDROID);
    
    
    // You can choose if use drawable or drawable resource
    //mSwitch.setSwitchToggleCheckedDrawableRes(android.R.drawable.ic_media_next);
    mSwitch.setSwitchToggleCheckedDrawable(ContextCompat.getDrawable(this, android.R.drawable.ic_media_next));
    
    //mSwitch.setSwitchToggleNotCheckedDrawableRes(android.R.drawable.ic_media_previous);
    mSwitch.setSwitchToggleNotCheckedDrawable(ContextCompat.getDrawable(this, android.R.drawable.ic_media_previous));
    
    
    // Setup the tristate switch
    mTristateSwitch.setState(RMTristateSwitch.STATE_LEFT);
    mTristateSwitch.setForceAspectRatio(true);
    mTristateSwitch.setEnabled(true);
    mTristateSwitch.setRightToLeft(false);
    mTristateSwitch.setSwitchDesign(RMTristateSwitch.DESIGN_LARGE);
    mTristateSwitch.setSwitchToggleLeftColor(Color.DKGRAY);
    mTristateSwitch.setSwitchToggleMiddleColor(Color.DKGRAY);
    mTristateSwitch.setSwitchToggleRightColor(Color.DKGRAY);
    mTristateSwitch.setSwitchBkgLeftColor(Color.LTGRAY);
    mTristateSwitch.setSwitchBkgMiddleColor(Color.LTGRAY);
    mTristateSwitch.setSwitchBkgRightColor(Color.LTGRAY);
    
    
    // You can choose if use drawable or drawable resource
    //mTristateSwitch.setSwitchToggleLeftDrawableRes(android.R.drawable.ic_media_previous);
    mTristateSwitch.setSwitchToggleLeftDrawable(ContextCompat.getDrawable(this, android.R.drawable.ic_media_previous));
    
    //mTristateSwitch.setSwitchToggleMiddleDrawableRes(android.R.drawable.ic_media_play);
    mTristateSwitch.setSwitchToggleMiddleDrawable(ContextCompat.getDrawable(this, android.R.drawable.ic_media_play));
    
    //mTristateSwitch.setSwitchToggleRightDrawableRes(android.R.drawable.ic_media_next);
    mTristateSwitch.setSwitchToggleRightDrawable(ContextCompat.getDrawable(this, android.R.drawable.ic_media_next));
    
    
    // Add a Switch state observer
    mSwitch.addSwitchObserver(new RMSwitch.RMSwitchObserver() {
        @Override
        public void onCheckStateChange(RMSwitch switchView, boolean isChecked) {
                            Toast.makeText(MainActivity.this, 
                                    &quot;Switch state: &quot; + 
                                    (isChecked ? &quot;checked&quot; : &quot;not checked&quot;), Toast.LENGTH_LONG)
                                    .show();
        }
    });
    
    mTristateSwitch.addSwitchObserver(new RMTristateSwitch.RMTristateSwitchObserver() {
        @Override
        public void onCheckStateChange(RMTristateSwitch switchView, @RMTristateSwitch.State int state) {
            Toast
                    .makeText(MainActivity.this,
                            state == RMTristateSwitch.STATE_LEFT ?
                                    &quot;Left&quot; :
                                    state == RMTristateSwitch.STATE_MIDDLE ?
                                            &quot;Middle&quot; :
                                            &quot;Right&quot;,
                            Toast.LENGTH_SHORT).show();
        }
    });
} } ```
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;####Supported Attributes
RMSwitch
——
| XML Attribute                 | Java method                                                     	| Description                                                                                                     	| Default value                                      	                                        |
|————————-	    |—————————————————————–	|—————————————————————————————————————–	|———————————————————————————————  |
| checked                  	    | setChecked(boolean checked)                                     	| The initial state of the Switch, if checked or not                                                              	| false                                              	                                        |
| enabled                  	    | setEnabled(boolean enabled)                                     	| If not enabled, the Switch will not be clickable, but it is still possible to change its state programmatically 	| true                                               	                                        |
| forceAspectRatio         	    | setForceAspectRatio(boolean forceAspectRatio)                   	| Force the Switch aspect ratio                                                                                   	| true                                               	                                        |
| switchBkgCheckedColor    	    | setSwitchBkgCheckedColor(@ColorInt int color)                   	| The background color of the Switch if checked                                                                   	| your current theme colorControlHighlight attribute 	                                        |
| switchBkgNotCheckedColor 	    | setSwitchBkgNotCheckedColor(@ColorInt int color)                	| The background color of the Switch if not checked                                                               	| the same as switchBkgCheckedColor                	                                            |
| switchToggleCheckedColor      | setSwitchToggleCheckedColor(@ColorInt int color)                	| The color of the Switch toggle if checked                                                                       	| your current theme colorAccent attribute           	                                        |
| switchToggleNotCheckedColor   | setSwitchToggleNotCheckedColor(@ColorInt int color)             	| The color of the Switch toggle if not checked                                                                   	| white                                              	                                        |
| switchToggleCheckedImage      | setSwitchToggleCheckedDrawableRes(@DrawableRes int drawable)    	| The image to be shown on the toggle if checked                                                                  	| the same as switchToggleNotCheckedImage if set, none otherwise                                |
|                               | setSwitchToggleCheckedDrawable(Drawable drawable)                 |                                                                                                                   |                                                                                               |
| switchToggleNotCheckedImage   | setSwitchToggleNotCheckedDrawableRes(@DrawableRes int drawable) 	| The image to be shown on the toggle if not checked                                                              	| the same as switchToggleCheckedImage if set, none otherwise                                   |
|                               | setSwitchToggleNotCheckedDrawable(Drawable drawable)                 |                                                                                                                   |                                                                                            |
| switchDesign                  | setSwitchDesign(@SwitchDesign int switchDesign)                   | The switch design, one of the RMAbstractSwitch.DESIGN_*** constants, changes the appearance of the switch         | RMAbstractSwitch.DESIGN_LARGE                                                                 |&lt;/p&gt;

&lt;h2 id=&quot;rmtristateswitch&quot;&gt;RMTristateSwitch&lt;/h2&gt;
&lt;p&gt;| XML Attribute                 | Java method                                                     	| Description                                                                                                     	| Default value                                      	                                        |
|————————-	    |—————————————————————–	|—————————————————————————————————————–	|———————————————————————————————  |
| state                  	    | setState(@State int state)                                     	| The initial state of the Switch, if left, middle or right                                                         | left                                              	                                        |
| enabled                  	    | setEnabled(boolean enabled)                                     	| If not enabled, the Switch will not be clickable, but it is still possible to change its state programmatically 	| true                                               	                                        |
| forceAspectRatio         	    | setForceAspectRatio(boolean forceAspectRatio)                   	| Force the Switch aspect ratio                                                                                   	| true                                               	                                        |
| right_to_left                 | setRightToLeft(boolean rightToLeft)                               | The direction of the switch at every tap, if from left to right or right to left                                  | false                                                                                         |
| switchBkgLeftColor    	    | setSwitchBkgLeftColor(@ColorInt int color)                   	    | The background color of the Switch if in the left state                                                           | your current theme colorControlHighlight attribute 	                                        |
| switchBkgMiddleColor    	    | setSwitchBkgMiddleColor(@ColorInt int color)                   	| The background color of the Switch if in the middle state                                                         | the same as switchBkgLeftColor                      	                                        |
| switchBkgRightColor    	    | setSwitchBkgRightColor(@ColorInt int color)                   	| The background color of the Switch if in the right state                                                     	    | the same as switchBkgLeftColor                     	                                        |
| switchToggleLeftColor    	    | setSwitchToggleLeftColor(@ColorInt int color)                   	| The background color of the Switch if in the left state                                                           | white                                              	                                        |
| switchToggleMiddleColor    	| setSwitchToggleMiddleColor(@ColorInt int color)                   | The background color of the Switch if in the middle state                                                         | your current theme primaryColor attribute          	                                        |
| switchToggleRightColor    	| setSwitchToggleRightColor(@ColorInt int color)                   	| The background color of the Switch Toggle if in the right state                                                   | your current theme accentColor attribute          	                                        |
| switchToggleLeftImage    	    | setSwitchToggleLeftDrawableRes(@ColorInt int color)               | The toggle image of the Switch if in the left state                                                               | the same as the one of the other states toggle image if at least one set, none otherwise 	    |
|                               | setSwitchToggleLeftDrawable(Drawable drawable)                    |                                                                                                                   |                                                                                               |
| switchToggleMiddleImage    	| setSwitchToggleMiddleDrawableRes(@ColorInt int color)             | The toggle image of the Switch if in the middle state                                                             | the same as the one of the other states toggle image if at least one set, none otherwise 	    |
|                               | setSwitchToggleMiddleDrawable(Drawable drawable)                  |                                                                                                                   |                                                                                               |
| switchToggleRightImage    	| setSwitchToggleRightDrawableRes(@ColorInt int color)              | The toggle image of the Switch if in the right state                                                              | the same as the one of the other states toggle image if at least one set, none otherwise 	    |
|                               | setSwitchToggleRightDrawable(Drawable drawable)                   |                                                                                                                   |                                                                                               |
| switchDesign                  | setSwitchDesign(@SwitchDesign int switchDesign)                   | The switch design, one of the RMAbstractSwitch.DESIGN_*** constants, changes the appearance of the switch         | RMAbstractSwitch.DESIGN_LARGE                                                                 |&lt;/p&gt;

&lt;p&gt;The changes between the Switch states will be automatically cross-faded, to obtain a smooth experience&lt;/p&gt;

&lt;h2 id=&quot;license&quot;&gt;License&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Copyright 2016 Riccardo Moro.

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and 
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Sun, 20 Nov 2016 00:00:00 +0900</pubDate>
        <link>http://android.kmshack.kr/2016/11/20/RMSwitch/</link>
        <guid isPermaLink="true">http://android.kmshack.kr/2016/11/20/RMSwitch/</guid>
        
        <category>switch</category>
        
        
      </item>
    
      <item>
        <title>Depth-LIB-Android</title>
        <description>&lt;h1 id=&quot;depth-lib-android&quot;&gt;Depth-LIB-Android&lt;/h1&gt;

&lt;p&gt;This library adds depth/thickness to views.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=ih2erag2beM&quot;&gt;&lt;img src=&quot;https://d13yacurqjgara.cloudfront.net/users/655449/screenshots/2179342/menu_dribble.gif&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=ih2erag2beM&quot;&gt;See demo on youtube&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;demo&quot;&gt;Demo&lt;/h2&gt;
&lt;p&gt;The demo code contains some examples of Canvas drawing techniques to create particle systems, waves and grain effect. I wasn’t really happy with the default shadows in Android beacuse they start misbehaving when they are rotated so I made my own shadow solution. The project also contains various tweening functions for animations, and uses the Facebook rebound lib for some tweens. Don’t expect too much from this lib, it was written as a quick prototype, so the visuals look good but the code behind it could have been better.&lt;/p&gt;

&lt;h2 id=&quot;contact&quot;&gt;Contact&lt;/h2&gt;

&lt;p&gt;You can reach me on twitter as &lt;a href=&quot;https://twitter.com/zellah&quot;&gt;@zellah&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;whos-behind-this&quot;&gt;Who’s behind this?&lt;/h2&gt;

&lt;p&gt;Developed by &lt;a href=&quot;https://twitter.com/zellah&quot;&gt;@zellah&lt;/a&gt; at &lt;a href=&quot;http://agens.no/&quot;&gt;agens.no&lt;/a&gt;, a company situated in Oslo.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://agens.no/&quot;&gt;&lt;img src=&quot;http://static.agens.no/images/agens_logo_w_slogan_avenir_medium.png&quot; width=&quot;340&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 17 Nov 2016 00:00:00 +0900</pubDate>
        <link>http://android.kmshack.kr/2016/11/17/Depth/</link>
        <guid isPermaLink="true">http://android.kmshack.kr/2016/11/17/Depth/</guid>
        
        <category>depth</category>
        
        <category>thickness</category>
        
        
      </item>
    
  </channel>
</rss>
